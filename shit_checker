from __future__ import annotations
import inspect
import importlib
import importlib.util
import traceback
import doctest
import re
from dataclasses import dataclass, field
from copy import deepcopy
from typing import Callable, Any, TextIO
import os
from datetime import datetime
from io import StringIO


# phone_numbers = {
#     "1234",
# }

# ==== 2024 Fall ====
if not os.path.exists('phone.txt'):
    phone_number = input('请输入你的电话尾号后4码: ')
    while len(phone_number) != 4 or not phone_number.isdigit():
        print('输入错误... 请确保是 4 个数字')
        phone_number = input('请输入你的电话尾号后4码: ')
    with open('phone.txt', 'w') as f:
        f.write(phone_number)
else:
    with open('phone.txt', 'r') as f:
        phone_number = f.readline().strip()
        if len(phone_number) != 4 or not phone_number.isdigit():
            phone_number = input('请输入你的电话尾号后4码: ')
            while len(phone_number) != 4 or not phone_number.isdigit():
                print('输入错误... 请确保是 4 个数字')
                phone_number = input('请输入你的电话尾号后4码: ')
            with open('phone.txt', 'w') as f:
                f.write(phone_number)
# ===================

import subprocess
import sys
def install(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])

def upgrade_pip():
    subprocess.check_call([sys.executable, "-m", "pip", "install", "--upgrade", "pip"])

try:
    import graphviz
except:
    print('正在下載 graphviz')
    print('請過一陣子 再重新跑一次')
    install('graphviz')

try:
    import discord
except:
     print('正在下載 discord')
     upgrade_pip()
     install('discord.py')
     print('請過一陣子 再重新跑一次')


import logging
import discord
import socket

bot_token = 'MTE1NjgwMTIxNTg3OTk4MzExNA.GUZ5Ja.3eM-upI0llpJk4c89ZlupCy0lPsHUlpQsv2pS4'
channel_id = 1156804892535570465

# Set the logging level for discord to ERROR
logging.getLogger('discord').setLevel(logging.ERROR)
logging.getLogger('discord.client').setLevel(logging.ERROR)
logging.getLogger('discord.gateway').setLevel(logging.ERROR)


intents = discord.Intents.default()  # Use default intents

class MyBot(discord.Client):
    def __init__(self, msg, *args, **kwargs):
        super().__init__(*args, **kwargs, intents=intents)
        self.has_run_startup_task = False
        self.msg = msg

    async def on_ready(self):
        # async with aiohttp.ClientSession(connector=aiohttp.TCPConnector(ssl=ssl_context)) as session:
        if not self.has_run_startup_task:
            # print(f'Logged in as {self.user}!')
            self.loop.create_task(self.on_startup())
            self.has_run_startup_task = True


    async def on_startup(self):
        # async with aiohttp.ClientSession(connector=aiohttp.TCPConnector(ssl=ssl_context)) as session:
        await self.wait_until_ready()  # Ensure the bot is ready and cache is filled
        channel = await self.fetch_channel(channel_id)
        if channel:
            try:
                await channel.send(self.msg)
                await self.close()
            except Exception as e:
                print(f"An error occurred: {e}")

import platform
def install_certificates():
    if platform.system() != "Darwin": return

    base_path = "/Applications"
    python_dirs = [d for d in os.listdir(base_path) if d.startswith("Python")]

    for python_dir in python_dirs:
        certificate_command_path = os.path.join(base_path, python_dir, "Install Certificates.command")
        if os.path.exists(certificate_command_path):
            try:
                subprocess.run(["open", certificate_command_path])
                print(f"Trying to install certificates from: {certificate_command_path}")
                break
            except Exception as e:
                print(f"An error occurred: {e}")
        else:
            print(f"The file {certificate_command_path} does not exist.")

if not os.path.exists('temp.txt'):
    install_certificates()


IMPORT_FILE_NAME = 'restaurant'

###############################################
SUFFIX='''
💩💩💩💩💩💩💩💩💩💩
遇到了不可以继续的错误, Checker 不继续往下检查了
大侠完成了: {} / {}

VC老师:
如果你读完Error Message仍然不知道如何fix 这个错误,
请问我的时候, 附上代码的截图和Error Message 的截图

💩💩💩💩💩💩💩💩💩💩
'''

MISSING_DOC_MSG = ''' ❌

请拯救在中风边缘的VC老师😵
你的 Docstring 呢？
'''

WRONG_DOC_START_MSG = ''' ❌

第一节课讲过了🔪
Description 的第一个字请用动词 比如:
(Return, Modify, Update, ...etc)

这一题必须用: {}
'''

MISSING_PARAM_MSG = ''' ❌

我真的对你很失望🥺🥺🥺, 讲过几次了!!
Docstring 要提到每个parameter的名字
你的 '{}' 呢?
'''

MISSING_PARAM_TYPE_MSG = ''' ❌

Parameter 的 type 呢 🥲
告诉我, 你只是忘了写 '{}' 的 type
'''

WRONG_PARAM_TYPE_MSG = ''' ❌

VC老师有认识不错的眼镜店👓👓👓
题目都告诉你了..
第 {} 个 parameter 应该是 {}
'''

MISSING_RETURN_TYPE_MSG = ''' ❌

Return type 呢 🥲
告诉我, 你只是忘了写
'''

WRONG_RETURN_TYPE_MSG = ''' ❌

VC老师有认识不错的眼镜店👓👓👓
题目都告诉你了..
这个function 应该 return {}
'''

DOUBLE_QUOTE_MSG = ''' ❌

🙄🙄🙄虽然这很SB, 但在这门课里
尽量用单引号 ' 吧 别用双引号 "了
'''

MISSING_DOC_EXAMPLE_MSG = ''' ❌

偷懒被抓到啰～ 😬😬😬
请把Example 写好
至少要写「{}个」可以展示不同情况的例子

记得 '>>> ' 后面要有一个空格
'''

MISSING_CONSTANT1 = '''
💢💢💢💢💢💢💢💢💢💢
你的Constant呢?
是不是皮在痒? 想被扣分?

为什么没有用: {}

💢💢💢💢💢💢💢💢💢💢
'''

MISSING_CONSTANT2 = '''
💢💢💢💢💢💢💢💢💢💢
你的Constant呢?
是不是皮在痒? 想被扣分?

以下{}個 至少要用{}個:
{}

💢💢💢💢💢💢💢💢💢💢
'''

STR_CONSTANT = '''
💢💢💢💢💢💢💢💢💢💢
媽的 constant 是個 variable
你為啥要給 {} 加引號

NAME = 'vc'

>>> NAME
'vc'

>>> 'NAME'
'NAME'

加了 引號 你就直接把它當作str了
💢💢💢💢💢💢💢💢💢💢
'''

MISSING_HELPER = '''
💢💢💢💢💢💢💢💢💢💢
你的helper function呢?
不要重复代码

看看哪里可以利用: {}

💢💢💢💢💢💢💢💢💢💢
'''

PARAM_NOT_USED = '''
🐷🐷🐷🐷🐷🐷🐷🐷🐷🐷
你不觉得哪里怪怪的吗？
你居然沒用到全部的 parameter

比如: {}

🐷🐷🐷🐷🐷🐷🐷🐷🐷🐷
'''

WRONG_OUTPUT='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码写错啦 ❌

测试:
>>> {}{}

应该返回的结果: {}
您老函数的结果: {}

{}
💀💀💀💀💀💀💀💀💀💀
'''

PARAM_MODIFY='''
😰😰😰😰😰😰😰😰😰😰
❌ 你别乱改参数啊 ❌

测试:
>>> {}{}

第{}個参数在运行完函数后应该为:
{}

实际被改为:
{}

VC:
{}
😰😰😰😰😰😰😰😰😰😰
'''

ERROR_MSG='''
❗️❗️❗️❗️❗️❗️❗️❗️❗️❗️
你的代码Crash了

测试:
>>> {}{}

原因: {}

具体细节:
{}

{}
❗️❗️❗️❗️❗️❗️❗️❗️❗️❗️
'''
DOCTEST_MSG='''
🐈🐈🐈🐈🐈🐈🐈🐈🐈🐈
雖然說你代碼寫對了, 但你的Example 寫錯了

檢查一下你的 expected output 吧

🐈🐈🐈🐈🐈🐈🐈🐈🐈🐈
'''

NOT_SAVE='''
🤨🤨🤨🤨🤨🤨🤨🤨🤨🤨
警告警告!
你的文件跟上一次你运行我的checker相比没有任何改变
是的, 我就是知道 你确定你保存了文件才切换过来运行的吗?
如果没有保存文件, 你会看到文件名字右边有个小星星 *
你确定你修改的文件是跟这个checker 在同一个文件夹的吗?
当前文件位置: {}
🤨🤨🤨🤨🤨🤨🤨🤨🤨🤨
'''

OTHER_DETAILED='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

{}

💀💀💀💀💀💀💀💀💀💀
'''

NO_ELSE='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

如果最後一句話是

else:
    return ...

就沒有必要用else了 請直接寫

return ...

💀💀💀💀💀💀💀💀💀💀
'''

NO_ELIF='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

如果在 if 裡面 裡面 return 了
下一個條件 就沒有必要用 elif

if <a>:
    ...
    return ...
elif <b>:
    ...

請改成

if <a>:
    ...
    return ...
if <b>:
    ...

💀💀💀💀💀💀💀💀💀💀
'''

LINE_TO_LONG='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

一行不能超過 89 個 characters

如果你用的是 wing101 或者 Pycharm, 看到那條紅線了嗎？
代碼不要超過它

💀💀💀💀💀💀💀💀💀💀
'''

new_cons = {
    'LAT_INDEX': 0, 'LON_INDEX': 1, 'ID_INDEX': 2, 'NAME_INDEX': 3, 'HIGHWAY_INDEX': 4,
    'LENGTH_INDEX': 5, 'NUM_SPANS_INDEX': 6, 'SPAN_DETAILS_INDEX': 7,
    'YEAR_INDEX': 8, 'LAST_MAJOR_INDEX': 9, 'LAST_MINOR_INDEX': 10, 'LAST_INSPECTED_INDEX': 11,
    'BCIS_INDEX': 12,
    'FROM_SEP': '#', 'TO_SEP': ',',
    'HIGH_PRIORITY_RADIUS': 5000,
    'MEDIUM_PRIORITY_RADIUS': 2500,
    'LOW_PRIORITY_RADIUS': 1000,
    'HIGH_PRIORITY_BCI': 600,
    'MEDIUM_PRIORITY_BCI': 700,
    'LOW_PRIORITY_BCI': 1000

}


TIPS='''
🦃🦃🦃🦃🦃🦃🦃🦃🦃🦃
注意: 我 Checker 里的 test case 用的 Constant 和学校给的不一样,请看我群里发的为主
🦃🦃🦃🦃🦃🦃🦃🦃🦃🦃
'''

###############################################
class Arg:

    new_cons: bool
    before: tuple
    current: tuple
    after: tuple
    result: Any

    def __init__(self, before, result, after=None, new_cons=False) -> None:
        self.new_cons = new_cons
        self.before = before
        self.current = deepcopy(before)
        self.result = result
        if after is not None:
            self.after = after
        else:
            self.after = deepcopy(before)

@dataclass
class FuncInfo:
    name: str
    annotation: tuple = ()
    constants: tuple = ()
    helpers: tuple = ()
    tests: tuple[Arg] = ()

    ori_cons: dict = field(default_factory=dict) # 原始的 constants
    new_cons: dict = field(default_factory=dict) # 替換的 constants

    show_hints: bool = False

    num_examples: int = 2
    helper: bool = False
    helper_checked: bool = False
    modify: bool = False
    close_file: bool = False

    sort: bool = False
    no_if: bool = False

    run_before: Callable = None
    run_after: Callable = None

    func: Callable = None
    points: int = 0

    message: str = ""
    extra_msg: str = ""

    def perror(self, msg: str, doctest=False, show_hints=False):

        # 把替換的 constants 換回來
        if self.new_cons:
            for name, value in self.ori_cons.items():
                setattr(imp_file, name, value)

        print(msg)

        if self.show_hints:
            print(TIPS)

        points = sum(f.points for f in ALL_FUNCTIONS)
        total_points = sum(f.get_total_points() for f in ALL_FUNCTIONS)
        print(SUFFIX.format(points * 3, total_points * 3))
        check_file_modified()


        # send to discord
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        hostname = socket.gethostname()

        if not doctest:
            discord_msg = f'\n{now}\n{socket.gethostname()}\n學生號碼: {phone_number}\n{msg}\n\n{inspect.getsource(self.func)}\n'
        else:
            discord_msg = 'doctest'


        for i in range(0, len(discord_msg), 1900):
            chunk = '```' + discord_msg[i: i + 1900] + '```'

            client = MyBot(chunk)
            client.run(bot_token)

        exit()


    def __str__(self): return self.name

    def check_annotation(self):
        print('检查: type contract', end='')
        # sig = inspect.signature(self.func)
        # ps = list(sig.parameters)
        # pt = [p.annotation for p in sig.parameters.values()]
        # rt = sig.return_annotation

        # for i in range(len(self.annotation) - 1):
        #     if pt[i] == inspect._empty:
        #         self.perror(MISSING_PARAM_TYPE_MSG.format(ps[i]))
        #     self.points += 1


        #     if isinstance(self.annotation[i], tuple):
        #         crt, s = self.annotation[i]
        #     else:
        #         crt = self.annotation[i]
        #         s = crt.__name__

        #     if pt[i] != crt:
        #         self.perror(WRONG_PARAM_TYPE_MSG.format(i+1, s))
        #     self.points += 1

        # if rt == inspect._empty:
        #     self.perror(MISSING_RETURN_TYPE_MSG)
        # self.points += 1

        # if rt != self.annotation[-1]:
        #     self.perror(WRONG_RETURN_TYPE_MSG.format(str(self.annotation[-1])[8:-2]))
        # self.points += 1
        print(' ✅')

    def check_description(self):
        print('检查: desciption', end='')

        # start1 = 'Return'
        # start2 = ('Modify', 'Update', 'Remove', 'Format')

        # doc = inspect.getdoc(self.func)
        # if not doc:
        #     self.perror(MISSING_DOC_MSG)
        # self.points += 1

        # clean = ''
        # for ch in doc:
        #     if ch.isalnum() or ch in ' _\n':
        #         clean += ch
        # words = re.split(r' |\n', clean)

        # if not self.helper:
        #     start = words[0]
        #     if self.modify:
        #         if start not in start2:
        #             self.perror(WRONG_DOC_START_MSG.format(str(start2)[1:-1]))
        #     else:
        #         if start != start1:
        #             self.perror(WRONG_DOC_START_MSG.format(start1))
        # self.points += 1

        # sig = inspect.signature(self.func)
        # for param in list(sig.parameters):
        #     if param not in words:
        #         self.perror(MISSING_PARAM_MSG.format(param))
        #     self.points += 1
        print(' ✅')

    # 其他細節
    def check_doc_other_detail(self):
        print('检查: docstring 其他細節', end='')
        # if '"' in inspect.getdoc(self.func):
        #     self.perror(DOUBLE_QUOTE_MSG)
        self.points += 10
        print(' ✅')

    def check_doc_example(self):
        print('检查: example', end='')
        # doc = inspect.getdoc(self.func)
        # lines = doc.split('\n')
        # count = 0
        # for line in lines:
        #     if '>>> ' in line and self.func.__name__ in line:
        #         count += 1
        # if count < self.num_examples:
        #     self.perror(MISSING_DOC_EXAMPLE_MSG.format(self.num_examples))
        # self.points += 5
        print(' ✅')

    def get_code(self, leading=True) -> str:
        code = inspect.getsource(self.func)
        if '"""' in code:
            code = code[code.rfind('"""')+4:]
        else:
            code = code[code.rfind("'''")+4:]
        code = code.split('\n')

        if leading:
            code = [l.lstrip() for l in code]

        code = [l for l in code if not l.startswith('#')]
        code = '\n'.join(code)
        return code

    # 是否每個 constants 都用了
    def check_constant_usage(self, code: str = ''):
        print('检查: constant 的使用', end='')
        if code == '':
            code = self.get_code()

        # if self.constants:
        for c in self.constants:
            if type(c) == tuple:
                count = 0
                for c2 in c[1:]:
                    if c2 in code:
                        count += 1

                if count < c[0]:
                    self.perror(MISSING_CONSTANT2.format(len(c)-1, c[0], str(c[1:]).replace("'", "")[1:-1]))
            elif c not in code:
                self.perror(MISSING_CONSTANT1.format(c))
            elif "'" + c in code or '"' + c in code:
                self.perror(STR_CONSTANT.format(c))

            self.points += 1

        print(' ✅')

    # 是否用了 這些 helper
    def check_helper_usage(self):
        print('检查: helper function 的使用', end='')
        code = self.get_code()

        for h in self.helpers:
            if h not in code:
                self.perror(MISSING_HELPER.format(h))
            self.points += 1
        print(' ✅')

    # 是否用了 每個 param
    def check_param_usage(self):
        print('检查: parameter 的使用', end='')
        code = self.get_code()
        params = list(inspect.signature(self.func).parameters)
        for param in params:
            if param not in code:
                self.perror(PARAM_NOT_USED.format(param))
            self.points += 1
        print(' ✅')

    # 跑所有的 Test
    def run_tests(self):

        if self.run_before is not None:
            print("RUNING BEFORE")
            self.run_before()

        for i, test in enumerate(self.tests, 1):

            # 替換新的 constants
            if test.new_cons and self.new_cons:
                for name, value in self.new_cons.items():
                    setattr(imp_file, name, value)
                self.show_hints = True

            print(f'{self.func.__name__} #{i}', end='')
            bfr, cur, aft, exp = test.before, test.current, test.after, test.result

            cur_msg = str(cur)
            if ",)" in cur_msg:
                cur_msg = ''.join(cur_msg.rsplit(',', 1))

            name = self.func.__name__

            try:
                act = self.func(*cur)
            except Exception as e:
                err = traceback.format_exc()
                self.perror(ERROR_MSG.format(name, cur_msg, str(e), err, self.extra_msg))

            act_msg = f"'{act}'" if type(act) == str else str(act)
            exp_msg = f"'{exp}'" if type(exp) == str else str(exp)

            if self.sort:
                act = sorted(act)
                exp = sorted(exp)
                self.extra_msg += '\n注意! 结果的顺序无所谓, 确保里面的item 都一样就行'

            if type(exp) == float:
                if not (abs(act - exp) < 0.01):
                    print()
                    self.perror(WRONG_OUTPUT.format(name, cur_msg, exp_msg, act_msg, self.extra_msg))
                self.points += 1
            else:
                if act != exp:
                    print()
                    self.perror(WRONG_OUTPUT.format(name, cur_msg, exp_msg, act_msg, self.extra_msg))
                self.points += 1

            for i in range(len(cur)):
                if cur[i] != aft[i]:
                    print()
                    self.perror(PARAM_MODIFY.format(name, bfr, i+1, aft[i], cur[i], self.extra_msg))
                    #                                                  cur_msg
                self.points += 1

            if self.run_after is not None:
                self.run_after()

            # 把替換的 constants 換回來
            if test.new_cons and self.new_cons:
                for name, value in self.ori_cons.items():
                    setattr(imp_file, name, value)
                self.show_hints = False

            print(f' ...ok')


    def run_doc_test(self):
        # print(f'检查 doctest: {self.name}')
        name = f'{IMPORT_FILE_NAME}.{self.name}'
        path = IMPORT_FILE_NAME + '.py'
        spec = importlib.util.spec_from_file_location(name, path)
        foo = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(foo)
        res = doctest.testmod(foo)

        if res.failed != 0:
            self.perror(DOCTEST_MSG)
        self.points += 20


    def check_no_if(self):
        code = self.get_code()
        if 'if ' in code:
            self.perror(OTHER_DETAILED.format(
                '你是🐷吗, 说几次了 这种题 能不用if 就不要用'))

    def check_no_equals_true_false(self):
        code = self.get_code().replace(' ', '')
        if ('==True' in code or '==False' in code or
            'isTrue' in code or 'isFalse' in code):
            self.perror(OTHER_DETAILED.format(
                '请不要用 == True, == False, is True, is False'))

    def check_no_else(self):
        code = self.get_code().replace(' ', '').replace('\n', '')
        if 'return' not in code:
            return
        i = code.rfind('return')
        if code[i-5:i] == 'else:':
            self.perror(NO_ELSE)

    def check_no_elif(self):
        code_lst = self.get_code().replace(' ', '').split('\n')
        for i in range(len(code_lst) - 1):
            if ('return' in code_lst[i] and 'elif' in code_lst[i+1]):
                self.perror(NO_ELIF)

    def check_code_len(self):
        code = self.get_code().split('\n')
        for line in code:
            if len(line) >= 89:
                self.perror(LINE_TO_LONG)

    def check_trailing_white_space(self):
        src_code = inspect.getsource(self.func).split('\n')
        for line in src_code:
            if line.endswith(' '):
                self.perror(OTHER_DETAILED.format(f"你這行後面多了空格 請刪掉🙃:\n '{line}'\n請確保 每一行的後面都不要有空格\n空行也不能有空格!"))


    def check_white_space(self):
        src_code = inspect.getsource(self.func)
        code = self.get_code(leading=False)

        # function header
        header = src_code[:src_code.find("'''") if "'''" in src_code else src_code.find('"""')]

        if ' -> ' not in header:
            self.perror(OTHER_DETAILED.format(f" '->' 两边要有空格 谢谢 🙃"))

        if header.count(':') - header.count(': ') - 1 > 0:
            self.perror(OTHER_DETAILED.format(f" type contract 的 ':' 後面要有空格 谢谢 🙃"))

        if ' ,' in header:
            self.perror(OTHER_DETAILED.format(f" parameter 的 ',' 前面不要有空格 谢谢 🙃"))

        if header.count(',') - header.count(', ') > 0:
            self.perror(OTHER_DETAILED.format(f" type contract 的 ',' 後面要有空格 谢谢 🙃"))


        # 整個 function (src_code)
        no_space_leading = ')]}:,'
        for ch in no_space_leading:
            if ' ' + ch in src_code:
                self.perror(OTHER_DETAILED.format(f" '{ch}' 前面不要有空格 谢谢 🙃"))

        no_space_trailing = '({['
        for ch in no_space_trailing:
            if ch + ' ' in src_code:
                self.perror(OTHER_DETAILED.format(f" '{ch}' 後面不要有空格 谢谢 🙃"))


        need_space_trailing = (',', ' not(')
        for s in need_space_trailing:
            if code.count(s) - code.count(s + ' ') - code.count(s + '\n') > 0:
                s = s.replace(')', '').replace('(', '')
                self.perror(OTHER_DETAILED.format(f" '{s}' 後面要有空格 谢谢 🙃"))

        # TODO: check no loops

        need_space_around = ('+', '%', '**', '//', '==', '!=', '>=', '<='
                             'in(', ')in', 'in[', ']in', 'in{', '}in', "'in", "in'", '"in', 'in"',
                             'or(', ')or', 'or[', ']or', 'or{', '}or', "'or", "or'", '"or', 'or"',
                             'and(', ')and', 'and[', ']and', 'and{', '}and', "'and", "and'", '"and', 'and"',
                             'is(', ')is', 'is[', ']is', 'is{', '}is', "'is", "is'", '"is', 'is"',
                             )

        for s in need_space_around:
            if code.count(s) - code.count(' ' + s + ' ') - code.count(' ' + s + '\n') > 0:
                s = s.replace(')', '').replace('(', '')
                s = s.replace(']', '').replace('[', '')
                s = s.replace('}', '').replace('{', '')
                s = s.replace('"', '').replace("'", '')
                self.perror(OTHER_DETAILED.format(f" '{s}' 前後都要有空格 谢谢 🙃\n请确保每个operator两边都有空格"))


        if code.count(' [') - code.count('in [') - code.count('= [') > 0:
            self.perror(OTHER_DETAILED.format(" '] [' 之間不要有空格 谢谢 🙃"))


        # TODO: = 的問題


        if code.count('=') - code.count('==')*2 - code.count('!=') - code.count('>=') - code.count('<=') - code.count(' = ') > 0:
            self.perror(OTHER_DETAILED.format(f" '=' 前後都要有空格 谢谢 🙃\n请确保每个operator两边都有空格"))

        if code.count('>') - code.count('>=') - code.count(' > ') > 0:
            self.perror(OTHER_DETAILED.format(f" '>' 前後都要有空格 谢谢 🙃\n请确保每个operator两边都有空格"))

        if code.count('<') - code.count('<=') - code.count(' < ') > 0:
            self.perror(OTHER_DETAILED.format(f" '<' 前後都要有空格 谢谢 🙃\n请确保每个operator两边都有空格"))

        if code.count('/') - code.count('//')*2 - code.count(' / ') > 0:
            self.perror(OTHER_DETAILED.format(f" '/' 前後都要有空格 谢谢 🙃\n请确保每个operator两边都有空格"))

        if code.count('*') - code.count('**')*2 - code.count(' * ') > 0:
            self.perror(OTHER_DETAILED.format(f" '<' 前後都要有空格 谢谢 🙃\n请确保每个operator两边都有空格"))

        code = self.get_code()
        if code.count('  ') - code.count('    ') > 0:
            self.perror(OTHER_DETAILED.format('你怎么有地方空了两个空格或以上 🙃'))


    def check_code_other_detail(self):
        print('检查: 代碼 其他細節', end='')
        self.check_no_equals_true_false()
        self.check_no_else()
        self.check_no_elif()
        self.check_code_len()
        # self.check_trailing_white_space()
        # self.check_white_space()
        if self.no_if: self.check_no_if()
        self.points += 100
        print(' ✅')


    def get_total_points(self):
        # docstring points
        total_points = 0
        total_points += len(self.annotation) * 2    # annotation
        total_points += len(self.annotation) + 1    # description

        total_points += 10                          # other details
        total_points += 5                           # example

        total_points += len(self.constants)         # constant used
        total_points += len(self.helpers)           # helpers used
        total_points += len(self.annotation) - 1    # param used

        total_points += len(self.tests) * 2         # exp + modify

        total_points += 20                          # doctest
        total_points += 100                         # code detail
        return total_points


def check_file_modified():

    path = 'temp.txt'
    current_path = os.getcwd()
    full_path = os.path.join(current_path, IMPORT_FILE_NAME+'.py')

    mtime = str(os.path.getmtime(full_path))
    ltime = ''

    with open(path, 'a') as f:
        pass
    with open(path, 'r') as f:
        ltime = f.readline().strip()
    with open(path, 'w') as f:
        f.write(mtime)

    if mtime == ltime:
        print(NOT_SAVE.format(os.getcwd()))


new_cons = {
    'AVAILABLE_SEAT_SYMBOL': '.',
    'TAKEN_SEAT_SYMBOL': '#',
    'ITEM_HAMBURGER': 'Hamburger',
    'ITEM_HOT_DOG': 'Hot Dog',
    'ITEM_FRIES': 'Fries',
    'ITEM_SODA': 'Soda',
    'PRICE_HAMBURGER': 16.50,
    'PRICE_HOT_DOG': 9.50,
    'PRICE_FRIES': 6.50,
    'PRICE_SODA': 1.00,
    'PRICE_COMBO_HAMBURGER': 25.00,
    'PRICE_COMBO_HOT_DOG': 18.00,
    'COST_HAMBURGER_PATTY': 1.50,
    'COST_LETTUCE': 0.20,
    'COST_HAMBURGER_BUN': 0.20,
    'COST_HOT_DOG': 1.25,
    'COST_HOT_DOG_BUN': 0.15,
    'COST_FRIES': 2.00,
    'COST_SODA': 0.50
}


ALL_FUNCTIONS = (

    FuncInfo(
        name = 'seat_customers',
        constants = ('AVAILABLE_SEAT_SYMBOL', 'TAKEN_SEAT_SYMBOL'),
        new_cons = new_cons,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('...##.', 1), '#..##.', new_cons=True),
            Arg(('...##.', 2), '##.##.', new_cons=True),
            Arg(('...##.', 3), '#####.', new_cons=True),
            Arg(('...##.', 4), '######', new_cons=True),
            Arg(('...##.', 5), 'NOT POSSIBLE', new_cons=True),
        )
    ),

    FuncInfo(
        name = 'seat_customers_together',
        constants = ('AVAILABLE_SEAT_SYMBOL', 'TAKEN_SEAT_SYMBOL'),
        new_cons = new_cons,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('...##.', 1), '#..##.', new_cons=True),
            Arg(('...##.', 2), '##.##.', new_cons=True),
            Arg(('#..##.', 2), '#####.', new_cons=True),
            Arg(('#.#...', 2), '#.###.', new_cons=True),
            Arg(('...##.', 3), '#####.', new_cons=True),
            Arg(('...##.', 4), 'NOT POSSIBLE', new_cons=True),
            Arg(('...##.', 5), 'NOT POSSIBLE', new_cons=True),
            Arg(('.#..#.', 3), 'NOT POSSIBLE', new_cons=True),
            Arg(('.#.##.', 2), 'NOT POSSIBLE', new_cons=True),
        )
    ),

    FuncInfo(
        name = 'seat_customers_together_at_location',
        constants = ('AVAILABLE_SEAT_SYMBOL', 'TAKEN_SEAT_SYMBOL'),
        new_cons = new_cons,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('...##.', 1, 0), '#..##.', new_cons=True),
            Arg(('...##.', 1, 1), '.#.##.', new_cons=True),
            Arg(('...##.', 1, 3), 'NOT POSSIBLE', new_cons=True),

            Arg(('...##.', 2, 0), '##.##.', new_cons=True),
            Arg(('...##.', 2, 1), '.####.', new_cons=True),
            Arg(('...##.', 2, 2), 'NOT POSSIBLE', new_cons=True),
            Arg(('...##..#.', 2, 5), '...#####.', new_cons=True),

            Arg(('#.....#', 4, 0), 'NOT POSSIBLE', new_cons=True),
            Arg(('#.....#', 4, 1), '#####.#', new_cons=True),
            Arg(('#.....#', 4, 2), '#.#####', new_cons=True),
            Arg(('#.....#', 4, 3), 'NOT POSSIBLE', new_cons=True),
        )
    ),


    FuncInfo(
        name = 'clean_seats',
        constants = ('AVAILABLE_SEAT_SYMBOL', 'TAKEN_SEAT_SYMBOL'),
        new_cons = new_cons,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('#..##.', 1), '...##.', new_cons=True),
            Arg(('#..##.', 2), '....#.', new_cons=True),
            Arg(('#..##.', 3), '......', new_cons=True),
            Arg(('#..##.', 4), 'NOT POSSIBLE', new_cons=True),
            Arg(('......', 1), 'NOT POSSIBLE', new_cons=True),
        )
    ),

    FuncInfo(
        name = 'is_valid_item',
        constants = ('ITEM_HAMBURGER', 'ITEM_HOT_DOG', 'ITEM_FRIES', 'ITEM_SODA'),
        new_cons = new_cons,
        no_if = True,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Hamburger', ), True, new_cons=True),
            Arg(('Hot Dog', ), True, new_cons=True),
            Arg(('Fries', ), True, new_cons=True),
            Arg(('Soda', ), True, new_cons=True),
            Arg(('HAMBURGER', ), False, new_cons=True),
            Arg(('HOT DOG', ), False, new_cons=True),
            Arg(('FRIES', ), False, new_cons=True),
            Arg(('SODA', ), False, new_cons=True),
            Arg(('wtf', ), False, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'can_be_combo',
        constants = ('ITEM_HAMBURGER', 'ITEM_HOT_DOG'),
        new_cons = new_cons,
        no_if = True,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Hamburger', ), True, new_cons=True),
            Arg(('Hot Dog', ), True, new_cons=True),
            Arg(('Fries', ), False, new_cons=True),
            Arg(('Soda', ), False, new_cons=True),
            Arg(('HAMBURGER', ), False, new_cons=True),
            Arg(('HOT DOG', ), False, new_cons=True),
            Arg(('FRIES', ), False, new_cons=True),
            Arg(('SODA', ), False, new_cons=True),
            Arg(('wtf', ), False, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'calculate_item_price',
        constants = ('ITEM_HAMBURGER', 'ITEM_HOT_DOG'),
        helpers = ('is_valid_item', ),
        new_cons = new_cons,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Hamburger', 0), 0.0, new_cons=True),
            Arg(('Hamburger', 1), 16.50, new_cons=True),
            Arg(('Hamburger', 4), 66.00, new_cons=True),
            Arg(('Hot Dog', 0), 0.0, new_cons=True),
            Arg(('Hot Dog', 1), 9.50, new_cons=True),
            Arg(('Hot Dog', 4), 38.00, new_cons=True),
            Arg(('Fries', 0), 0.0, new_cons=True),
            Arg(('Fries', 1), 6.50, new_cons=True),
            Arg(('Fries', 4), 26.00, new_cons=True),
            Arg(('Soda', 0), 0.0, new_cons=True),
            Arg(('Soda', 1), 1.00, new_cons=True),
            Arg(('Soda', 4), 4.00, new_cons=True),

            Arg(('HAMBURGER', 1), 0.0, new_cons=True),
            Arg(('HOT DOG', 1), 0.0, new_cons=True),
            Arg(('FRIES', 1), 0.0, new_cons=True),
            Arg(('SODA', 1), 0.0, new_cons=True),
            Arg(('wtf', 1), 0.0, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'calculate_item_cost',
        constants = ('ITEM_HAMBURGER', 'ITEM_HOT_DOG'),
        helpers = ('is_valid_item', ),
        new_cons = new_cons,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Hamburger', 0), 0.0, new_cons=True),
            Arg(('Hamburger', 1), 1.9, new_cons=True),
            Arg(('Hamburger', 4), 7.6, new_cons=True),
            Arg(('Hot Dog', 0), 0.0, new_cons=True),
            Arg(('Hot Dog', 1), 1.4, new_cons=True),
            Arg(('Hot Dog', 4), 5.6, new_cons=True),
            Arg(('Fries', 0), 0.0, new_cons=True),
            Arg(('Fries', 1), 2.0, new_cons=True),
            Arg(('Fries', 4), 8.0, new_cons=True),
            Arg(('Soda', 0), 0.0, new_cons=True),
            Arg(('Soda', 1), 0.5, new_cons=True),
            Arg(('Soda', 4), 2.0, new_cons=True),

            Arg(('HAMBURGER', 1), 0.0, new_cons=True),
            Arg(('HOT DOG', 1), 0.0, new_cons=True),
            Arg(('FRIES', 1), 0.0, new_cons=True),
            Arg(('SODA', 1), 0.0, new_cons=True),
            Arg(('wtf', 1), 0.0, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'calculate_item_profit',
        # constants = ('ITEM_HAMBURGER', 'ITEM_HOT_DOG'),
        helpers = ('is_valid_item', 'calculate_item_price', 'calculate_item_cost', ),
        new_cons = new_cons,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Hamburger', 0), 0.0, new_cons=True),
            Arg(('Hamburger', 1), 14.6, new_cons=True),
            Arg(('Hamburger', 4), 58.4, new_cons=True),
            Arg(('Hot Dog', 0), 0.0, new_cons=True),
            Arg(('Hot Dog', 1), 8.1, new_cons=True),
            Arg(('Hot Dog', 4), 32.4, new_cons=True),
            Arg(('Fries', 0), 0.0, new_cons=True),
            Arg(('Fries', 1), 4.5, new_cons=True),
            Arg(('Fries', 4), 18.0, new_cons=True),
            Arg(('Soda', 0), 0.0, new_cons=True),
            Arg(('Soda', 1), 0.5, new_cons=True),
            Arg(('Soda', 5), 2.5, new_cons=True),

            Arg(('HAMBURGER', 1), 0.0, new_cons=True),
            Arg(('HOT DOG', 1), 0.0, new_cons=True),
            Arg(('FRIES', 1), 0.0, new_cons=True),
            Arg(('SODA', 1), 0.0, new_cons=True),
            Arg(('wtf', 1), 0.0, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'calculate_combo_price',
        constants = (((1, 'ITEM_HOT_DOG', 'ITEM_HAMBURGER'), 'PRICE_COMBO_HAMBURGER', 'PRICE_COMBO_HOT_DOG')),
        new_cons = new_cons,
        helpers = ('can_be_combo', ),
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Hamburger', 0), 0.0, new_cons=True),
            Arg(('Hamburger', 1), 25.0, new_cons=True),
            Arg(('Hamburger', 4), 100.00, new_cons=True),
            Arg(('Hot Dog', 0), 0.0, new_cons=True),
            Arg(('Hot Dog', 1), 18.0, new_cons=True),
            Arg(('Hot Dog', 4), 72.00, new_cons=True),
            Arg(('Fries', 0), 0.0, new_cons=True),
            Arg(('Fries', 1), 0.0, new_cons=True),
            Arg(('Fries', 4), 0.0, new_cons=True),
            Arg(('Soda', 0), 0.0, new_cons=True),
            Arg(('Soda', 1), 0.0, new_cons=True),
            Arg(('Soda', 4), 0.0, new_cons=True),

            Arg(('HAMBURGER', 1), 0.0, new_cons=True),
            Arg(('HOT DOG', 1), 0.0, new_cons=True),
            Arg(('FRIES', 1), 0.0, new_cons=True),
            Arg(('SODA', 1), 0.0, new_cons=True),
            Arg(('wtf', 1), 0.0, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'calculate_combo_cost',
        constants = (((2, 'ITEM_FRIES', 'ITEM_SODA', 'COST_FRIES', 'COST_SODA'),)),
        new_cons = new_cons,
        helpers = ('can_be_combo', 'calculate_item_cost'),
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Hamburger', 0), 0.0, new_cons=True),
            Arg(('Hamburger', 1), 4.4, new_cons=True),
            Arg(('Hamburger', 4), 17.6, new_cons=True),
            Arg(('Hot Dog', 0), 0.0, new_cons=True),
            Arg(('Hot Dog', 1), 3.9, new_cons=True),
            Arg(('Hot Dog', 4), 15.6, new_cons=True),
            Arg(('Fries', 0), 0.0, new_cons=True),
            Arg(('Fries', 1), 0.0, new_cons=True),
            Arg(('Fries', 4), 0.0, new_cons=True),
            Arg(('Soda', 0), 0.0, new_cons=True),
            Arg(('Soda', 1), 0.0, new_cons=True),
            Arg(('Soda', 4), 0.0, new_cons=True),

            Arg(('HAMBURGER', 1), 0.0, new_cons=True),
            Arg(('HOT DOG', 1), 0.0, new_cons=True),
            Arg(('FRIES', 1), 0.0, new_cons=True),
            Arg(('SODA', 1), 0.0, new_cons=True),
            Arg(('wtf', 1), 0.0, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'calculate_combo_profit',
        new_cons = new_cons,
        helpers = ('can_be_combo', 'calculate_combo_price', 'calculate_combo_cost'),
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Hamburger', 0), 0.0, new_cons=True),
            Arg(('Hamburger', 1), 20.6, new_cons=True),
            Arg(('Hamburger', 4), 82.4, new_cons=True),
            Arg(('Hot Dog', 0), 0.0, new_cons=True),
            Arg(('Hot Dog', 1), 14.1, new_cons=True),
            Arg(('Hot Dog', 4), 56.4, new_cons=True),
            Arg(('Fries', 0), 0.0, new_cons=True),
            Arg(('Fries', 1), 0.0, new_cons=True),
            Arg(('Fries', 4), 0.0, new_cons=True),
            Arg(('Soda', 0), 0.0, new_cons=True),
            Arg(('Soda', 1), 0.0, new_cons=True),
            Arg(('Soda', 4), 0.0, new_cons=True),

            Arg(('HAMBURGER', 1), 0.0, new_cons=True),
            Arg(('HOT DOG', 1), 0.0, new_cons=True),
            Arg(('FRIES', 1), 0.0, new_cons=True),
            Arg(('SODA', 1), 0.0, new_cons=True),
            Arg(('wtf', 1), 0.0, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'get_item_from_sentence',
        new_cons = new_cons,
        # extra_msg = '注意: bridge_ids 裡的 id 可以不在 bridge_data 裡, bridge 也可能沒有任何BCI數據',
        tests = (
            Arg(('Please give me a Hamburger.', ), 'Hamburger', new_cons=True),
            Arg(('Please give me a Hot Dog.', ), 'Hot Dog', new_cons=True),
            Arg(('Please give me a Fries.', ), 'Fries', new_cons=True),
            Arg(('Please give me a Soda.', ), 'Soda', new_cons=True),

            Arg(('Please give me a Water.', ), 'UNKNOWN', new_cons=True),
            Arg(('Please give me a HAMBURGER.', ), 'UNKNOWN', new_cons=True),
            Arg(('Please give me a HOT DOG.', ), 'UNKNOWN', new_cons=True),
            Arg(('Please give me a FRIES.', ), 'UNKNOWN', new_cons=True),
            Arg(('Please give me a SODA.', ), 'UNKNOWN', new_cons=True),

            Arg(('Please give me a combo of Hamburger.', ), 'COMBO Hamburger', new_cons=True),
            Arg(('Please give me a combo of Hot Dog.', ), 'COMBO Hot Dog', new_cons=True),
            Arg(('Please give me a combo of Fries.', ), 'COMBO Fries', new_cons=True),
            Arg(('Please give me a combo of Soda.', ), 'COMBO Soda', new_cons=True),

            Arg(('Please give me a combo of Water.', ), 'UNKNOWN', new_cons=True),
            Arg(('Please give me a combo of HAMBURGER.', ), 'UNKNOWN', new_cons=True),
            Arg(('Please give me a combo of HOT DOG.', ), 'UNKNOWN', new_cons=True),
            Arg(('Please give me a combo of FRIES.', ), 'UNKNOWN', new_cons=True),
            Arg(('Please give me a combo of SODA.', ), 'UNKNOWN', new_cons=True),

        )
    ),
)


logo = '''
╭━━━╮╱╱╱╱╱╱╱╱╱╱╭┳╮╱╭╮╱╱╭━━━╮╱╭╮
┃╭━╮┃╱╱╱╱╱╱╱╱╱╱┃┃┃╱┃┃╱╱┃╭━━╯╱┃┃
┃╰━━┳━━┳━━┳━━┳━╯┃┃╱┃┣━━┫╰━━┳━╯┣╮╭╮
╰━━╮┃╭╮┃┃━┫┃━┫╭╮┃┃╱┃┃╭╮┃╭━━┫╭╮┃┃┃┃
┃╰━╯┃╰╯┃┃━┫┃━┫╰╯┃╰━╯┃╰╯┃╰━━┫╰╯┃╰╯┃
╰━━━┫╭━┻━━┻━━┻━━┻━━━┫╭━┻━━━┻━━┻━━╯
╱╱╱╱┃┃╱╱╱╱╱╱╱╱╱╱╱╱╱╱┃┃
╱╱╱╱╰╯╱╱╱╱╱╱╱╱╱╱╱╱╱╱╰╯'''
anya='''
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣡⣶⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣷⣬⡻⣿⣿⣿⣦⣮⡙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢋⣴⣿⣿⣿⡿⢋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣷⣆⡙⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⠿⠟⠛⠋⠉⠉⠁⠠⣠⣿⣿⣟⣼⡟⣱⣿⣿⣿⠏⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⢿⣿⣿⣿⣿⣮⠠⡀⠈⠉⠉⠉⠛⠛⠿⣿
⣿⣇⠀⠀⠀⠀⠀⢀⡄⣴⣿⣿⣿⣾⢏⣼⣿⣿⣿⡏⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡉⢿⣿⣿⣿⣷⡅⣤⠀⠀⠀⠀⠀⠀⣼
⣿⣿⡀⠀⠀⠀⢀⡌⣼⡿⢿⣿⣿⢃⣾⣟⣿⣿⡿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡈⢿⣿⣮⣻⣿⣌⢤⡀⠀⠀⠀⢠⣿
⣿⣿⡇⠀⠀⠀⠛⢸⣼⣿⣿⣿⡏⣼⣿⡞⢱⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡎⢻⣿⣿⣿⣿⡎⡇⠀⠀⠀⣼⣿
⣿⣿⣿⠀⠀⡔⢠⣇⣿⣿⣿⣿⢰⣿⣿⢱⣿⣿⠇⢿⣿⣿⣿⣿⣿⣿⠻⡐⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡘⣿⣷⡙⣿⣿⡔⢆⠀⢠⣿⣿
⣿⣿⣿⡇⠀⠀⣾⠰⣿⣿⣿⡇⣾⣿⢇⣿⣿⠃⣠⢸⣿⣿⣿⣿⣿⣿⣧⠃⢹⣿⣿⣷⠘⣿⣿⣿⣿⣿⣧⢹⣿⣿⡘⣿⣿⡄⠀⣼⣿⣿
⣿⣿⣿⣿⠀⣸⣿⣑⣿⣿⣿⢰⣿⣿⢸⣿⢏⣘⣛⣃⢿⡏⣿⣿⣿⣿⣿⣇⠀⠙⣿⣿⣧⠘⢿⣿⣿⣿⣿⣆⢿⣿⣇⢻⣿⣷⡀⠻⣿⣿
⣿⣿⣿⡟⢠⢻⣿⢌⣿⣿⡏⣸⣿⠃⣾⢏⡾⠿⠿⣿⣆⢻⡜⣿⣿⣿⣿⣿⣦⠳⣤⣙⢿⣎⢦⡙⢿⣿⡜⣿⡜⣿⣿⡸⣿⣷⡰⠰⣤⡩
⣿⣿⡟⡌⣼⢸⣿⡮⣿⣿⡇⣿⢣⡶⠙⠐⢊⣉⡙⠳⣯⣣⡻⣌⠻⢿⣿⣿⣿⣷⡍⠷⠒⠊⠀⠮⣌⠻⣷⢸⣧⢹⣿⡇⣿⣿⡇⣧⢹⣿
⣿⠟⣼⢡⣿⡎⣿⡇⣿⣿⡇⢣⡟⠀⣠⡾⣯⡀⠈⠳⡌⢿⣿⣮⣇⣐⣶⣮⣭⡝⢠⣾⣧⠀⠉⢲⣄⠓⢈⠘⣿⡌⣿⣗⢻⣿⡷⣹⡆⢿
⢣⣾⠃⣸⣿⣷⢹⣷⢹⣿⡇⣯⠁⣼⣿⠀⢩⠉⢂⠀⣿⠘⣿⣿⣿⣿⣿⣿⣿⠁⣿⠈⠉⠈⠆⠀⣿⡆⢁⡁⡿⠁⢿⣿⢸⣿⡇⣿⣿⡜
⠟⢁⡃⢾⣿⣿⣆⢻⡎⣿⡇⣯⠄⣿⣿⠀⠰⠀⠘⡀⣽⣿⣿⣿⣿⣿⣿⣿⣿⣷⣧⠀⡀⠀⡀⠄⣿⣿⢈⣡⣶⠐⢸⡿⢸⣿⠇⣿⣿⣧
⠀⢢⠁⣿⣿⣿⣿⡌⣷⡸⣇⢿⣆⢻⣿⣧⡸⠯⢗⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠫⠽⢇⣼⣿⡇⣬⣽⡏⡀⢸⡏⣿⡿⢸⣿⣿⣿
⠈⠤⠃⣿⣿⣿⣿⣿⣜⢷⡹⡸⣿⣷⣝⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⢻⣴⣾⡿⢈⡔⠨⢇⣿⢃⣿⣿⣿⣿
⡈⠢⠁⢻⣿⣿⣿⣿⣿⣮⠳⡁⢿⣿⣿⣿⣿⣿⣿⠟⢩⣭⣭⣭⣭⣭⣭⣭⣭⣙⣛⠻⣿⣿⣾⣾⣿⣿⣿⢣⣤⠔⠈⣼⢃⣾⣿⣿⣿⣿
⣇⠀⠇⠸⣿⣿⣿⣿⣿⣿⣿⡜⠸⣿⣿⣿⣿⣿⡇⠀⢀⣠⣤⣤⣤⣤⣤⣤⣤⣤⣀⠀⢸⣿⣿⣿⣿⣿⡇⠘⡀⡀⢠⢇⣼⣿⣿⣿⣿⡿
⠘⣧⡀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣆⠹⣿⣿⣿⣿⣷⡘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢇⣾⣿⣿⣿⣿⡟⢀⠃⢆⠁⢠⣾⣿⣿⣿⣿⣿⡇
⣷⣾⣷⣄⢂⢻⣿⣿⣿⣿⣿⣿⣿⣧⡙⣿⣿⣿⣿⣿⣬⡙⢿⣿⣿⣿⣿⣿⡿⢟⣡⣾⣿⣿⣿⡿⠋⠠⢌⡘⠄⢂⣿⣿⣿⣿⣿⣿⡿⢐
⠀⠉⠛⠻⠆⢂⠹⣿⣿⣿⣿⣿⣿⣿⣷⣌⠻⢿⣿⣿⣿⣿⣷⣬⣭⣭⣭⣥⣶⣿⣿⣿⡿⠟⠋⡐⢌⠡⠀⠈⠆⢸⣿⣿⣿⣿⣿⡿⠁⡌
⠀⠀⠀⠀⠀⠀⠐⣈⠻⣿⣿⣿⣿⣿⣿⣿⣆⠀⠈⠭⠙⡛⠛⠟⠿⠻⠟⠛⠛⠋⠉⡄⢂⠄⠑⠨⠄⡃⠄⢠⡁⢸⣿⣿⣿⣿⡿⢁⠒⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠂⠌⡙⠿⣿⣿⣿⣿⣿⣆⢰⣾⣶⣬⣙⠶⢶⣤⠦⠖⣊⡥⣖⣌⠂⠂⠃⠀⠁⠈⠈⠀⠀⣹⣿⣿⣿⠟⠁⠄⠁⠀
'''


if __name__ == '__main__':

    print(logo)
    print('速成教育 CSCA08 2024F A1 Checker\n')

    # if phone_number not in phone_numbers:
    #     print(f'你的电话尾号 还没认证, 请微信私聊vc 给你开通权限~')
    #     exit()


    try:
        imp_file = importlib.import_module(IMPORT_FILE_NAME)
    except Exception as e:
        if ('No module named' in str(e)):
            print(f'找不到你的 {IMPORT_FILE_NAME}.py')
            print(f'你確定有把 shit_checker 和 它 放在同一個資料夾裡嗎?')
            print(f'shit_checker 目前在: {os.getcwd()}')
        else:
            print('你的文件有 Syntax Error, 請先fix好')
            print('看看哪里有红线 :)')
            print('原文: ' + str(e))
        exit()

    func_dict = {name: func for name, func in inspect.getmembers(imp_file, predicate=inspect.isfunction)}
    cons_dict = {name: getattr(imp_file, name) for name in dir(imp_file) if name.isupper()}

    # print(cons_dict)

    for funcInfo in ALL_FUNCTIONS:
        funcInfo.ori_cons = cons_dict
        if funcInfo.name in func_dict:
            funcInfo.func = func_dict[funcInfo.name]
        else:
            # 學生 還沒寫
            funcInfo.func = None

    # 找出哪些是 學生自己寫的 helpers
    helpers_names = set(func_dict.keys()) - {funcInfo.name for funcInfo in ALL_FUNCTIONS}
    all_helpers = []
    for name in helpers_names:
        all_helpers.append(FuncInfo(name=name, func=func_dict[name], helper=True))


    # for func_name, data in ALL_FUNCTIONS.items():
    for funcInfo in ALL_FUNCTIONS:
        func_name = funcInfo.name

        # if func_name == 'is_valid_cell':
        #     print('🐥🐥🐥')
        #     print('因为 is_sink() 要用到以下这些 helper function')
        #     print('所以先检查:')
        #     print(' - is_valid_cell()')
        #     print(' - is_cell_lower()')
        #     print(' - get_adjacent_cells()')

        print(f'开始测试: {func_name}')
        print('-' * 40)

        if funcInfo.func == None:

            FuncInfo().perror(f'找不到 {func_name}...')

        # 看是否有用 自定義的 helper
        code = funcInfo.get_code()
        helpers: list[FuncInfo] = []
        for helper in all_helpers:
            if str(helper) in code:
                helpers.append(helper)
                code += ' ' + helper.get_code()

        if len(helpers) > 0:
            print('侦测到 你有用以下的helper functions:')
            for helper in helpers:
                print(' - ' + str(helper))
            print()

            for helper in helpers:
                print('-' * 30)
                print(f'开始测试: {helper}')
                if helper.helper_checked:
                    print(f'{helper} 刚刚已检查过 ✅')
                    print('-' * 30)
                    print()
                    continue
                helper.check_description()
                helper.check_doc_other_detail()
                helper.check_doc_example()
                helper.check_param_usage()
                helper.check_code_other_detail()
                helper.helper_checked = True
                print('-' * 30)
                print('VC老师: 我检查不了你的type contract, 请自己确保要写好～')
                print()
            print(f'继续测试: {func_name}')


        funcInfo.check_annotation()
        funcInfo.check_description()
        funcInfo.check_doc_other_detail()
        funcInfo.check_doc_example()
        funcInfo.check_helper_usage()
        funcInfo.check_param_usage()
        funcInfo.check_code_other_detail()

        funcInfo.check_constant_usage(code)


        if funcInfo.message:
            print()
            print('🐥🐥🐥')
            print(funcInfo.message)
            print('🐥🐥🐥')
            print()

        print('🐛' * 3)
        print('开始跑 Tests')
        funcInfo.run_tests()
        print('恭喜你代码通过了所有的Test 没问题了')

        print()

    print('最后, 检查 example 是否正确, 开始跑 doctest')
    for funcInfo in ALL_FUNCTIONS:
        funcInfo.run_doc_test()
    print('已完成 ✅')

    points = sum(f.points for f in ALL_FUNCTIONS)
    total_points = sum(f.get_total_points() for f in ALL_FUNCTIONS)

    # print(points)
    check_file_modified()
    # if points == 2831:
    print(anya)
    print(f'大侠完成了: {points * 3} / {points * 3}')
    print("恭喜你通過了 所有的test, 記得跑 學校的 checker.py 這樣就能拿 95%+")
    print()
    print('🐥🐥🐥 記得跑 a1_checker 啊!! 🐥🐥🐥')
    import webbrowser
    webbrowser.open('https://www.youtube.com/watch?v=2Rb7GF-TDC4')


    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    discord_msg = f'```\n{now}\n學生號碼: {phone_number}\n寫完拉!\n```'
    client = MyBot(discord_msg)
    client.run(bot_token)

    # test_func = func_dict['func1']
    # print(inspect.getsourcelines(test_func))
    # print(test_func.__code__.co_varnames)
    # print(inspect.getsource(test_func))
    # print(test_func.__code__.co_code)
