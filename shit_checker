from __future__ import annotations
import inspect
import importlib
import importlib.util
import traceback
import doctest
import re
from dataclasses import dataclass, field
from copy import deepcopy
from typing import Callable, Any, TextIO
import os
from datetime import datetime
from io import StringIO
import base64


# phone_numbers = {
#     "1234",
# }

import subprocess
import sys
def install(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])

def upgrade_pip():
    subprocess.check_call([sys.executable, "-m", "pip", "install", "--upgrade", "pip"])

# try:
#     import graphviz
# except:
#     print('正在下載 graphviz')
#     print('請過一陣子 再重新跑一次')
#     install('graphviz')

try:
    import discord
except:
    print('正在下載 discord')

    # Get the current Python version
    python_version = sys.version_info

    # Check if Python version is 3.13
    if python_version.major == 3 and python_version.minor == 13:
        print("Python 3.13 detected. Installing audioop-lts...")

        try:
            # Install audioop-lts using pip
            install("audioop-lts")
        except subprocess.CalledProcessError:
            print("Failed to install audioop-lts. Please try installing it manually.")
    else:
        print(f"Current Python version is {python_version.major}.{python_version.minor}. No installation needed.")

    #  upgrade_pip()
    install('discord.py')
    print('請過一陣子 再重新跑一次')

try:
    import pycodestyle
except:
    print('正在下載 pycodestyle')
    print('請過一陣子 再重新跑一次')
    install('pycodestyle')







import logging
import discord
import socket

bot_token = 'MTE1NjgwMTIxNTg3OTk4MzExNA.Gv4wMf.DsUxS8Fb9DpmJGpAEYYFZUko7yZrREZPVh8Rac'
channel_id = 1156804892535570465

# Set the logging level for discord to ERROR
logging.getLogger('discord').setLevel(logging.ERROR)
logging.getLogger('discord.client').setLevel(logging.ERROR)
logging.getLogger('discord.gateway').setLevel(logging.ERROR)


intents = discord.Intents.default()  # Use default intents

class MyBot(discord.Client):
    def __init__(self, msg, *args, **kwargs):
        super().__init__(*args, **kwargs, intents=intents)
        self.has_run_startup_task = False
        self.msg = msg

    async def on_ready(self):
        # async with aiohttp.ClientSession(connector=aiohttp.TCPConnector(ssl=ssl_context)) as session:
        if not self.has_run_startup_task:
            # print(f'Logged in as {self.user}!')
            self.loop.create_task(self.on_startup())
            self.has_run_startup_task = True


    async def on_startup(self):
        # async with aiohttp.ClientSession(connector=aiohttp.TCPConnector(ssl=ssl_context)) as session:
        await self.wait_until_ready()  # Ensure the bot is ready and cache is filled
        channel = await self.fetch_channel(channel_id)
        if channel:
            try:
                await channel.send(self.msg)
                await self.close()
            except Exception as e:
                print(f"An error occurred: {e}")

import platform
def install_certificates():
    if platform.system() != "Darwin": return

    base_path = "/Applications"
    python_dirs = [d for d in os.listdir(base_path) if d.startswith("Python")]

    for python_dir in python_dirs:
        certificate_command_path = os.path.join(base_path, python_dir, "Install Certificates.command")
        if os.path.exists(certificate_command_path):
            try:
                subprocess.run(["open", certificate_command_path])
                print(f"Trying to install certificates from: {certificate_command_path}")
                break
            except Exception as e:
                print(f"An error occurred: {e}")
        else:
            print(f"The file {certificate_command_path} does not exist.")


# ==== 2025 Winter ====
def check_permission(phone_number, hostname, n):
    students = {                                    # Avg 53.1
        ("1234", "VC-Macbook-Pro.local"),
        ("6054", "EvanLAPTOP"),
        ("1234", "VC-Macbook-Pro.local"),
        ("1234", "VC-Macbook-Pro.local"),
        ("1234", "VC-Macbook-Pro.local"),
        ("1234", "VC-Macbook-Pro.local"),
        ("1234", "VC-Macbook-Pro.local"),
        ("1234", "VC-Macbook-Pro.local"),
        ("1234", "VC-Macbook-Pro.local"),
        ("1234", "VC-Macbook-Pro.local"),
    }

    if (phone_number, hostname) not in students and n >= 1000:
        print(f'你不是周課的學生, 使用次數到達上限, 请微信私聊vc 给你开通权限~')
        exit()

def process_temp_file(check_modification=False):
    current_file_path = os.path.abspath(__file__)
    parent_directory = os.path.dirname(current_file_path)
    python_path = os.path.join(parent_directory, IMPORT_FILE_NAME+'.py')
    temp_path = os.path.join(parent_directory, 'vc.txt')

    hostname = socket.gethostname()
    # last modification time
    mtime = str(os.path.getmtime(python_path))
    n = 0

    if not os.path.exists(temp_path):
        install_certificates()
        phone_number = input('请输入你的电话尾号后4码: ')
        while len(phone_number) != 4 or not phone_number.isdigit():
            print('输入错误... 请确保是 4 个数字')
            phone_number = input('请输入你的电话尾号后4码: ')
        with open(temp_path, 'wb') as f:
            f.write(base64.b64encode(f'{phone_number}\n{hostname}\n{mtime}\n{n}'.encode('utf-8')))
    else:
        try:
            with open(temp_path, 'rb') as f:
                phone_number, hostname, ltime, n = base64.b64decode(f.readline()).decode('utf-8').split('\n')

                if check_modification and ltime == mtime:
                    print(NOT_SAVE.format(parent_directory))

            with open(temp_path, 'wb') as f:
                f.write(base64.b64encode(f'{phone_number}\n{hostname}\n{mtime}\n{int(n)+1}'.encode('utf-8')))

        except:
            os.remove(temp_path)
            return process_temp_file()

    return phone_number, hostname, int(n)
# ===================




IMPORT_FILE_NAME = 'fantasy_draft_functions'

###############################################
SUFFIX='''
💩💩💩💩💩💩💩💩💩💩
遇到了不可以继续的错误, Checker 不继续往下检查了
大侠完成了: {} / {}

VC老师:
如果你读完Error Message仍然不知道如何fix 这个错误,
请问我的时候, 附上代码的截图和Error Message 的截图

💩💩💩💩💩💩💩💩💩💩
'''

PEP8 = ''' ❌

你的代碼比💩難看, 原因:
    {0}

💩在这呢:
    {1}

'''

MISSING_PRECONDITIONS_MSG = '''

请拯救在中风边缘的VC老师😵
你的 Precondition 呢？
'''

MISSING_DOC_MSG = ''' ❌

请拯救在中风边缘的VC老师😵
你的 Docstring 呢？
'''

WRONG_DOC_START_MSG = ''' ❌

第一节课讲过了🔪
Description 的第一个字请用动词 比如:
(Return, Modify, Update, ...etc)

这一题必须用: {}
'''

MISSING_PARAM_MSG = ''' ❌

我真的对你很失望🥺🥺🥺, 讲过几次了!!
Docstring 要提到每个parameter的名字
你的 '{}' 呢?
'''

MISSING_PARAM_TYPE_MSG = ''' ❌

Parameter 的 type 呢 🥲
告诉我, 你只是忘了写 '{}' 的 type
'''

DELETE_PASS = ''' ❌

你的pass 为啥不删掉啊 🥲
'''

WRONG_PARAM_TYPE_MSG = ''' ❌

VC老师有认识不错的眼镜店👓👓👓
题目都告诉你了..
第 {} 个 parameter 应该是 {}
'''

MISSING_RETURN_TYPE_MSG = ''' ❌

Return type 呢 🥲
告诉我, 你只是忘了写
'''

WRONG_RETURN_TYPE_MSG = ''' ❌

VC老师有认识不错的眼镜店👓👓👓
题目都告诉你了..
这个function 应该 return {}
'''

DOUBLE_QUOTE_MSG = ''' ❌

🙄🙄🙄虽然这很SB, 但在这门课里
尽量用单引号 ' 吧 别用双引号 "了
'''

MISSING_DOC_EXAMPLE_MSG = ''' ❌

偷懒被抓到啰～ 😬😬😬
请把Example 写好
至少要写「{}个」可以展示不同情况的例子

记得 '>>> ' 后面要有一个空格
'''

MISSING_CONSTANT1 = '''
💢💢💢💢💢💢💢💢💢💢
你的Constant呢?
是不是皮在痒? 想被扣分?

为什么没有用: {}

💢💢💢💢💢💢💢💢💢💢
'''

MISSING_CONSTANT2 = '''
💢💢💢💢💢💢💢💢💢💢
你的Constant呢?
是不是皮在痒? 想被扣分?

以下{}個 至少要用{}個:
{}

💢💢💢💢💢💢💢💢💢💢
'''

STR_CONSTANT = '''
💢💢💢💢💢💢💢💢💢💢
媽的 constant 是個 variable
你為啥要給 {} 加引號

NAME = 'vc'

>>> NAME
'vc'

>>> 'NAME'
'NAME'

加了 引號 你就直接把它當作str了
💢💢💢💢💢💢💢💢💢💢
'''

MISSING_HELPER = '''
💢💢💢💢💢💢💢💢💢💢
你的helper function呢?
不要重复代码

看看哪里可以利用: {}

💢💢💢💢💢💢💢💢💢💢
'''

PARAM_NOT_USED = '''
🐷🐷🐷🐷🐷🐷🐷🐷🐷🐷
你不觉得哪里怪怪的吗？
你居然沒用到全部的 parameter

比如: {}

🐷🐷🐷🐷🐷🐷🐷🐷🐷🐷
'''

WRONG_OUTPUT='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码写错啦 ❌

测试:
>>> {}{}

应该返回的结果: {}
您老函数的结果: {}

{}
💀💀💀💀💀💀💀💀💀💀
'''

PARAM_MODIFY='''
😰😰😰😰😰😰😰😰😰😰
❌ 参数改錯拉！ ❌

测试:
>>> {}{}

第{}個参数在运行完函数后应该为:
{}

实际被改为:
{}

VC:
{}
😰😰😰😰😰😰😰😰😰😰
'''

PARAM_MODIFY_ONE_OF='''
😰😰😰😰😰😰😰😰😰😰
❌ 参数改錯拉！ ❌

测试:
>>> {}{}

第{}個参数在运行完函数后应该为以下其中一種:
{}

实际被改为:
{}

VC:
{}
😰😰😰😰😰😰😰😰😰😰
'''


ERROR_MSG='''
❗️❗️❗️❗️❗️❗️❗️❗️❗️❗️
你的代码Crash了

测试:
>>> {}{}

原因: {}

具体细节:
{}

{}
❗️❗️❗️❗️❗️❗️❗️❗️❗️❗️
'''
DOCTEST_MSG='''
🐈🐈🐈🐈🐈🐈🐈🐈🐈🐈
雖然說你代碼寫對了, 但你的Example 寫錯了

檢查一下你的 expected output 吧

🐈🐈🐈🐈🐈🐈🐈🐈🐈🐈
'''

NOT_SAVE='''
🤨🤨🤨🤨🤨🤨🤨🤨🤨🤨
警告警告!
你的文件跟上一次你运行我的checker相比没有任何改变
是的, 我就是知道 你确定你保存了文件才切换过来运行的吗?
如果没有保存文件, 你会看到文件名字右边有个小星星 *
你确定你修改的文件是跟这个checker 在同一个文件夹的吗?
当前文件位置: {}
🤨🤨🤨🤨🤨🤨🤨🤨🤨🤨
'''

OTHER_DETAILED='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

{}

💀💀💀💀💀💀💀💀💀💀
'''

NO_ELSE='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

如果最後一句話是

else:
    return ...

就沒有必要用else了 請直接寫

return ...

💀💀💀💀💀💀💀💀💀💀
'''

NO_ELIF='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

如果在 if 裡面 裡面 return 了
下一個條件 就沒有必要用 elif

if <a>:
    ...
    return ...
elif <b>:
    ...

請改成

if <a>:
    ...
    return ...
if <b>:
    ...

💀💀💀💀💀💀💀💀💀💀
'''

LINE_TO_LONG='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

一行不能超過 89 個 characters

如果你用的是 wing101 或者 Pycharm, 看到那條紅線了嗎？
代碼不要超過它

在你要换行的地方 先打\\然后按回车

💀💀💀💀💀💀💀💀💀💀
'''



TIPS='''
🦃🦃🦃🦃🦃🦃🦃🦃🦃🦃
注意: 我的 Test Cases 用的 Constant 為:

PLAYERS_TO_SELECT = 60
FORWARDS_NEEDED = 30
DEFENCEMEN_NEEDED = 20
GOALIES_NEEDED = 10

POINTS_PER_GOAL = 5
POINTS_PER_ASSIST = 3
POINTS_PER_HIT = 0.35
F_DCS_PER_POINT = 11
D_DCS_PER_POINT = 6
GAA_VALUE = 20
SV_VALUE = 200

FORWARD = 'X'
DEFENCEMEN = 'Y'
GOALIE = 'Z'
🦃🦃🦃🦃🦃🦃🦃🦃🦃🦃
'''

new_cons = {
    'PLAYERS_TO_SELECT' : 60,
    'FORWARDS_NEEDED' : 30,
    'DEFENCEMEN_NEEDED' : 20,
    'GOALIES_NEEDED' : 10,
    'POINTS_PER_GOAL' : 5,
    'POINTS_PER_ASSIST' : 3,
    'POINTS_PER_HIT' : 0.2,
    'F_DCS_PER_POINT' : 11,
    'D_DCS_PER_POINT' : 6,
    'GAA_VALUE' : 20,
    'SV_VALUE' : 200,
    'FORWARD' : 'X',
    'DEFENCEMEN' : 'Y',
    'GOALIE' : 'Z',
}

###############################################
class OneOf:
    args: tuple

    def __init__(self, args):
        self.args = args

class Arg:

    new_cons: bool
    before: tuple
    current: tuple
    after: tuple
    result: Any

    def __init__(self, before, result, after=None, new_cons=False) -> None:
        self.new_cons = new_cons
        self.before = before
        self.current = deepcopy(before)
        self.result = result
        if after is not None:
            self.after = after
        else:
            self.after = deepcopy(before)

@dataclass
class FuncInfo:
    name: str
    annotation: tuple = ()
    constants: tuple = ()
    helpers: tuple = ()
    tests: tuple[Arg] = ()

    ori_cons: dict = field(default_factory=dict) # 原始的 constants
    new_cons: dict = field(default_factory=dict) # 替換的 constants

    need_to_check_docstring: bool = True            # 需不需要檢查 docstring
    need_to_check_precondition: bool = False        # 需不需要檢查 precondition 有沒有寫
    param_can_be_modified: bool = False             # 參數是否可以被改變

    arguments_rename: dict = field(default_factory=dict)

    show_hints: bool = False

    num_examples: int = 2
    helper: bool = False
    helper_checked: bool = False
    modify: bool = False
    close_file: bool = False

    sort: bool = False
    no_if: bool = False

    run_before: Callable = None
    run_after: Callable = None

    func: Callable = None
    points: int = 0

    message: str = ""
    extra_msg: str = ""

    def perror(self, msg: str, doctest=False, show_hints=False):

        # 把替換的 constants 換回來
        if self.new_cons:
            for name, value in self.ori_cons.items():
                setattr(imp_file, name, value)

        print(msg)

        if self.show_hints:
            print(TIPS)

        points = sum(f.points for f in ALL_FUNCTIONS)
        total_points = sum(f.get_total_points() for f in ALL_FUNCTIONS)
        print(SUFFIX.format(points * 3, total_points * 3))
        process_temp_file(check_modification=True)


        # send to discord
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        if not doctest:
            discord_msg = f'\n{now}\n{hostname}\n學生號碼: {phone_number}\n{msg}\n\n{inspect.getsource(self.func)}\n'
        else:
            discord_msg = 'doctest'


        for i in range(0, len(discord_msg), 1900):
            chunk = '```' + discord_msg[i: i + 1900] + '```'

            client = MyBot(chunk)
            client.run(bot_token)

        exit()


    def __str__(self): return self.name

    def check_annotation(self):
        print('检查: type contract', end='')
        if self.annotation:
            sig = inspect.signature(self.func)
            ps = list(sig.parameters)
            pt = [p.annotation for p in sig.parameters.values()]
            rt = sig.return_annotation

            for i in range(len(self.annotation) - 1):
                if pt[i] == inspect._empty:
                    self.perror(MISSING_PARAM_TYPE_MSG.format(ps[i]))
                self.points += 1


                if isinstance(self.annotation[i], tuple):
                    crt, s = self.annotation[i]
                else:
                    crt = self.annotation[i]
                    s = crt.__name__

                if pt[i] != crt:
                    self.perror(WRONG_PARAM_TYPE_MSG.format(i+1, s))
                self.points += 1

            if rt == inspect._empty:
                self.perror(MISSING_RETURN_TYPE_MSG)
            self.points += 1

            if isinstance(self.annotation[-1], tuple):
                crt, s = self.annotation[-1]
            else:
                crt = self.annotation[-1]
                # s = crt.__name__

            if rt != crt:
                self.perror(WRONG_RETURN_TYPE_MSG.format(str(self.annotation[-1])[8:-2]))
            self.points += 1
        print(' ✅')

    def check_description(self):
        print('检查: desciption', end='')

        start1 = 'Return'
        start2 = ('Modify', 'Update', 'Remove', 'Format')

        doc = inspect.getdoc(self.func)
        if not doc:
            self.perror(MISSING_DOC_MSG)
        self.points += 1

        clean = ''
        for ch in doc:
            if ch.isalnum() or ch in ' _\n':
                clean += ch
        words = re.split(r' |\n', clean)

        # print(words)

        if not self.helper:
            start = words[0]
            if self.modify:
                if start not in start2:
                    self.perror(WRONG_DOC_START_MSG.format(str(start2)[1:-1]))
            else:
                if start != start1:
                    self.perror(WRONG_DOC_START_MSG.format(start1))
        self.points += 1

        sig = inspect.signature(self.func)
        for param in list(sig.parameters):
            if param not in words:
                self.perror(MISSING_PARAM_MSG.format(param))
            self.points += 1
        print(' ✅')

    # 其他細節
    def check_doc_other_detail(self):
        print('检查: docstring 其他細節', end='')
        doc = inspect.getdoc(self.func)
        lines = doc.split('\n')
        for line in lines:
            if '>>>' not in line and '"' in line:
                self.perror(DOUBLE_QUOTE_MSG)
        self.points += 10
        print(' ✅')

    def check_precondition(self):
        print('检查: Precondition', end='')
        doc = inspect.getdoc(self.func)
        if "Preconditions:" not in doc:
            self.perror(MISSING_PRECONDITIONS_MSG)
        self.points += 5
        print(' ✅')


    def check_doc_example(self):
        print('检查: example', end='')
        doc = inspect.getdoc(self.func)
        lines = doc.split('\n')
        count = 0
        for line in lines:
            if '>>> ' in line and self.func.__name__ in line:
                count += 1
        if count < self.num_examples:
            self.perror(MISSING_DOC_EXAMPLE_MSG.format(self.num_examples))
        self.points += 5
        print(' ✅')

    def get_header(self) -> str:
        code = inspect.getsource(self.func).split('\n')
        header = ""
        for line in code:
            if '"""' in line or "'''" in line:
                break
            header += '\n' + line.lstrip()
        return header

    def get_code(self, leading=True) -> str:
        code = inspect.getsource(self.func)
        if '"""' in code:
            code = code[code.rfind('"""')+4:]
        else:
            code = code[code.rfind("'''")+4:]
        code = code.split('\n')

        if leading:
            code = [l.lstrip() for l in code]

        code = [l for l in code if not l.startswith('#')]
        code = '\n'.join(code)
        return code

    # 是否每個 constants 都用了
    def check_constant_usage(self, code: str = ''):
        print('检查: constant 的使用', end='')
        if code == '':
            code = self.get_code()

        # if self.constants:
        for c in self.constants:
            if type(c) == tuple:
                count = 0
                for c2 in c[1:]:
                    if c2 in code:
                        count += 1

                if count < c[0]:
                    self.perror(MISSING_CONSTANT2.format(len(c)-1, c[0], str(c[1:]).replace("'", "")[1:-1]))
            elif c not in code:
                self.perror(MISSING_CONSTANT1.format(c))
            elif "'" + c in code or '"' + c in code:
                self.perror(STR_CONSTANT.format(c))

            self.points += 1

        print(' ✅')

    # 是否用了 這些 helper
    def check_helper_usage(self):
        print('检查: helper function 的使用', end='')
        code = self.get_code()

        for h in self.helpers:
            if h + '(' not in code:
                self.perror(MISSING_HELPER.format(h + '()'))
            self.points += 1
        print(' ✅')

    # 是否用了 每個 param
    def check_param_usage(self):
        print('检查: parameter 的使用', end='')
        code = self.get_code()
        params = list(inspect.signature(self.func).parameters)
        for param in params:
            if param not in code:
                self.perror(PARAM_NOT_USED.format(param))
            self.points += 1
        print(' ✅')

    # 跑所有的 Test
    def run_tests(self):

        if self.run_before is not None:
            print("RUNING BEFORE")
            self.run_before()

        for i, test in enumerate(self.tests, 1):

            # 替換新的 constants
            if test.new_cons and self.new_cons:
                for name, value in self.new_cons.items():
                    setattr(imp_file, name, value)
                self.show_hints = True

            print(f'{self.func.__name__} #{i}', end='')
            bfr, cur, aft, exp = test.before, test.current, test.after, test.result

            cur_msg = str(cur)
            if ",)" in cur_msg:
                cur_msg = ''.join(cur_msg.rsplit(',', 1))

            # 把 argument 替換成 Constant 名字
            for name, arg in self.arguments_rename.items():
                cur_msg = cur_msg.replace(str(arg), name)

            name = self.func.__name__

            try:
                act = self.func(*cur)
            except Exception as e:
                err = traceback.format_exc()
                self.perror(ERROR_MSG.format(name, cur_msg, str(e), err, self.extra_msg))

            act_msg = f"'{act}'" if type(act) == str else str(act)
            exp_msg = f"'{exp}'" if type(exp) == str else str(exp)

            if self.sort:
                act = sorted(act)
                exp = sorted(exp)
                self.extra_msg += '\n注意! 结果的顺序无所谓, 确保里面的item 都一样就行'

            if type(exp) == float:
                if not (abs(act - exp) < 0.01):
                    print()
                    self.perror(WRONG_OUTPUT.format(name, cur_msg, exp_msg, act_msg, self.extra_msg))
                self.points += 1
            else:
                if act != exp:
                    print()
                    self.perror(WRONG_OUTPUT.format(name, cur_msg, exp_msg, act_msg, self.extra_msg))
                self.points += 1

            for i in range(len(cur)):

                if type(aft[i]) == OneOf:
                    aft_str = ''
                    has_same = False
                    for each_aft in aft[i].args:
                        if cur[i] == each_aft:
                            has_same = True
                        aft_str += str(each_aft) + '\n'

                    if not has_same:
                        print()
                        self.perror(PARAM_MODIFY_ONE_OF.format(name, cur_msg, i+1, aft_str, cur[i], self.extra_msg))

                elif cur[i] != aft[i]:
                    print()
                    self.perror(PARAM_MODIFY.format(name, cur_msg, i+1, aft[i], cur[i], self.extra_msg))
                    #                                                  cur_msg
                self.points += 1

            if self.run_after is not None:
                self.run_after()

            # 把替換的 constants 換回來
            if test.new_cons and self.new_cons:
                for name, value in self.ori_cons.items():
                    setattr(imp_file, name, value)
                self.show_hints = False

            print(f' ...ok')


    def run_doc_test(self):
        # print(f'检查 doctest: {self.name}')
        name = f'{IMPORT_FILE_NAME}.{self.name}'
        path = IMPORT_FILE_NAME + '.py'
        spec = importlib.util.spec_from_file_location(name, path)
        foo = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(foo)
        res = doctest.testmod(foo)

        if res.failed != 0:
            self.perror(DOCTEST_MSG)
        self.points += 20


    def check_no_if(self):
        code = self.get_code()
        if 'if ' in code:
            self.perror(OTHER_DETAILED.format(
                '你是🐷吗, 说几次了 这种题 能不用if 就不要用'))

    def check_no_loop(self):
        code = self.get_code()
        if 'for ' in code or 'while ' in code:
            self.perror(OTHER_DETAILED.format(
                '我非常鄙视你, 这题有必要用loop吗?'))

    def check_no_equals_true_false(self):
        code = self.get_code().replace(' ', '')
        if ('==True' in code or '==False' in code or
            'isTrue' in code or 'isFalse' in code):
            self.perror(OTHER_DETAILED.format(
                '请不要用 == True, == False, is True, is False'))

    def check_no_else(self):
        code = self.get_code().replace(' ', '').replace('\n', '')
        if 'return' not in code:
            return
        i = code.rfind('return')
        if code[i-5:i] == 'else:':
            self.perror(NO_ELSE)

    def check_no_elif(self):
        code_lst = self.get_code().replace(' ', '').split('\n')
        for i in range(len(code_lst) - 1):
            if ('return' in code_lst[i] and 'elif' in code_lst[i+1]):
                self.perror(NO_ELIF)

    # def check_all_if_branch(self):
    #     code_lst = self.get_code().replace(' ', '').split('\n')
    #     for i in range(len(code_lst) - 1):
    #         if ('return' in code_lst[i] and 'elif' in code_lst[i+1]):
    #             self.perror(NO_ELIF)


    def check_code_len(self):
        code = self.get_code().split('\n')
        for line in code:
            if len(line) >= 89:
                self.perror(LINE_TO_LONG)

    def check_delete_pass(self):
        code = self.get_code(leading=False)
        if ' pass\n' in code:
            self.perror(DELETE_PASS)

    def check_white_space(self):
        src_code = inspect.getsource(self.func)

        code = self.get_header() + '\n' + self.get_code(leading=False)

        violations = []

        class CustomReport(pycodestyle.BaseReport):
            def error(self, line_number, offset, text, check):
                """Report an error, according to options."""
                code = super().error(line_number, offset, text, check)
                if code:
                    line_content = self.lines[line_number - 1].strip()  # offset from 0
                    violations.append((line_number, offset, text, line_content))
                return code

        # Use an in-memory text stream to check the code
        with StringIO(code) as f:
            checker = pycodestyle.Checker(filename='in-memory', lines=f.readlines(), report=CustomReport(options=pycodestyle.StyleGuide().options))
            checker.check_all()

        # return violations
        operators = '+ - * / // ** % = == != > >= < <= -> or and in'
        for line_number, column, err_msg, code_line in violations:
            if   'E231' in err_msg:
                self.perror(PEP8.format(f'{err_msg.split()[-1]}后面要有一个空格', code_line))
            elif 'E225' in err_msg:
                self.perror(PEP8.format(f'所有的 operator 前后都要有一个空格\n    常见的有: {operators}', code_line))
            elif 'E201' in err_msg:
                self.perror(PEP8.format(f'{err_msg.split()[-1]}后面不要有空格', code_line))
            elif 'E202' in err_msg or 'E203' in err_msg or 'E211' in err_msg:
                self.perror(PEP8.format(f'{err_msg.split()[-1]}前面不要有空格 (不要在括号前面换行)', code_line))

            elif 'E305' in err_msg or 'E302' in err_msg:
                self.perror(PEP8.format('每个function之间要刚好空两行', code_line))

            elif 'E111' in err_msg:
                self.perror(PEP8.format('indentation有问题, 空格一定是4的倍数', code_line))

            elif 'W291' in err_msg:
                self.perror(PEP8.format('你代码后面有多余的空格', code_line))


    def check_code_other_detail(self):
        print('检查: 代碼 其他細節', end='')
        self.check_no_equals_true_false()
        self.check_no_else()
        self.check_no_elif()
        self.check_code_len()
        # self.check_trailing_white_space()
        self.check_white_space()
        if self.no_if: self.check_no_if()
        self.check_no_loop()
        self.check_delete_pass()
        self.points += 100
        print(' ✅')


    def get_total_points(self):
        # docstring points
        total_points = 0
        total_points += len(self.annotation) * 2    # annotation
        total_points += len(self.annotation) + 1    # description

        total_points += 10                          # other details
        total_points += 5                           # example

        total_points += len(self.constants)         # constant used
        total_points += len(self.helpers)           # helpers used
        total_points += len(self.annotation) - 1    # param used

        total_points += len(self.tests) * 2         # exp + modify

        total_points += 20                          # doctest
        total_points += 100                         # code detail
        return total_points

# =================================

# =================================

class VCStringIO(StringIO):
    def __eq__(self, other):
        return True

ALL_FUNCTIONS = (

    FuncInfo(
        name = 'get_player_id',
        annotation = (str, str),
        tests = ()
    ),

    FuncInfo(
        name = 'get_position',
        annotation = (str, str),
        tests = ()
    ),

    FuncInfo(
        name = 'get_price',
        annotation = (str, int),
        # constants = ('MON',),
        # no_if = True,
        new_cons = new_cons,
        tests = (
            Arg(('', ), 0),
            Arg(('MGO_PX_G0-_A14_DC43_H70_Pr0-', ), 0),
            Arg(('MGO_PX_G0-_A14_DC43_H70_Pr5-', ), 5),
            Arg(('MGO_PX_G0-_A14_DC43_H70_Pr10', ), 10),
            Arg(('MGO_PX_G0-_A14_DC43_H70_Pr23', ), 23),
            Arg(('CLA_PZ_GAA2.23_SV0.910_Pr6-', ), 6),
            Arg(('CLA_PZ_GAA2.23_SV0.910_Pr12', ), 12),
        )
    ),


    FuncInfo(
        name = 'can_select',
        annotation = (str, int, int, int, bool),
        new_cons = new_cons,
        constants = ((2, 'FORWARD', 'DEFENCEMEN', 'GOALIE'),
                     'FORWARDS_NEEDED', 'DEFENCEMEN_NEEDED', 'GOALIES_NEEDED'),
        show_hints = True,
        # no_if = True,
        tests = (
            Arg(('', 29, 20, 10), True, new_cons=True),

            Arg(('MGO_PX_G0-_A14_DC43_H70_Pr5-', 29, 20, 9), True, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC43_H70_Pr5-', 29, 18, 9), True, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC43_H70_Pr5-', 30, 20, 9), False, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC43_H70_Pr5-', 31, 20, 9), False, new_cons=True),

            Arg(('MGO_PY_G0-_A14_DC43_H70_Pr5-', 29, 19, 9), True, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC43_H70_Pr5-', 29, 20, 9), False, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC43_H70_Pr5-', 29, 21, 9), False, new_cons=True),

            Arg(('MGO_PZ_G0-_A14_DC43_H70_Pr5-', 29, 19, 9), True, new_cons=True),
            Arg(('MGO_PZ_G0-_A14_DC43_H70_Pr5-', 29, 19, 10), False, new_cons=True),
            Arg(('MGO_PZ_G0-_A14_DC43_H70_Pr5-', 29, 19, 11), False, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'can_afford',
        annotation = (int, str, bool),
        new_cons = new_cons,
        helpers = ('get_price', ),
        no_if = True,
        tests = (
            Arg((10, ''), True, new_cons=True),
            Arg((10, 'MGO_PZ_G0-_A14_DC43_H70_Pr5-'), True, new_cons=True),
            Arg((5,  'MGO_PZ_G0-_A14_DC43_H70_Pr5-'), True, new_cons=True),
            Arg((4,  'MGO_PZ_G0-_A14_DC43_H70_Pr5-'), False, new_cons=True),

            Arg((11, 'CLA_PZ_GAA2.23_SV0.910_Pr12'), False, new_cons=True),
            Arg((12, 'CLA_PZ_GAA2.23_SV0.910_Pr12'), True, new_cons=True),
            Arg((13, 'CLA_PZ_GAA2.23_SV0.910_Pr12'), True, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'update_budget',
        annotation = (int, str, int),
        new_cons = new_cons,
        helpers = ('get_price', ),
        tests = (
            Arg((10, ''), 10, new_cons=True),
            Arg((0, ''), 0, new_cons=True),

            Arg((10, 'MGO_PX_G0-_A14_DC43_H70_Pr5-'), 5, new_cons=True),
            Arg((5,  'MGO_PX_G0-_A14_DC43_H70_Pr5-'), 0, new_cons=True),
            Arg((3,  'MGO_PX_G0-_A14_DC43_H70_Pr5-'), -2, new_cons=True),
            Arg((8,  'MGO_PX_G0-_A14_DC43_H70_Pr12'), -4, new_cons=True),
            Arg((12, 'MGO_PX_G0-_A14_DC43_H70_Pr12'), 0, new_cons=True),
            Arg((14, 'MGO_PX_G0-_A14_DC43_H70_Pr12'), 2, new_cons=True),

            Arg((10, 'CLA_PZ_GAA2.23_SV0.910_Pr5-'), 5, new_cons=True),
            Arg((5,  'CLA_PZ_GAA2.23_SV0.910_Pr5-'), 0, new_cons=True),
            Arg((3,  'CLA_PZ_GAA2.23_SV0.910_Pr5-'), -2, new_cons=True),
            Arg((8,  'CLA_PZ_GAA2.23_SV0.910_Pr12'), -4, new_cons=True),
            Arg((12, 'CLA_PZ_GAA2.23_SV0.910_Pr12'), 0, new_cons=True),
            Arg((14, 'CLA_PZ_GAA2.23_SV0.910_Pr12'), 2, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'add_to_team',
        annotation = (str, str, str),
        new_cons = new_cons,
        helpers = ('get_player_id', ),
        tests = (
            Arg(('', ''), '', new_cons=True),
            Arg(('', 'ABC_'), 'ABC_', new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC43_H70_Pr5-', ''), 'MGO_', new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC43_H70_Pr5-', 'WTF_'), 'WTF_MGO_', new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC43_H70_Pr5-', 'WTF_ABC_'), 'WTF_ABC_MGO_', new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC43_H70_Pr5-', 'WTF_MGO_ABC_'), 'WTF_MGO_ABC_', new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC43_H70_Pr5-', 'WTF_MOG_ABC_'), 'WTF_MOG_ABC_MGO_', new_cons=True),
        )
    ),

    FuncInfo(
        name = 'remove_player',
        annotation = (str, int, str),
        new_cons = new_cons,
        tests = (
            Arg(('', 0), '', new_cons=True),
            Arg(('', -1), '', new_cons=True),
            Arg(('', 1), '', new_cons=True),
            Arg(('WTF_ABC_XYZ_', -1), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 0), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 1), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 2), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 3), 'ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 4), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 5), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 6), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 7), 'WTF_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 8), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 9), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 10), 'WTF_ABC_XYZ_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 11), 'WTF_ABC_', new_cons=True),
            Arg(('WTF_ABC_XYZ_', 12), 'WTF_ABC_XYZ_', new_cons=True),
        )
    ),
    FuncInfo(
        name = 'compute_dc_points',
        annotation = (str, int),
        new_cons = new_cons,
        helpers = ('get_position', ),
        constants = ((2, 'FORWARD', 'DEFENCEMEN', 'GOALIE'),
                     'F_DCS_PER_POINT', 'D_DCS_PER_POINT'),
        show_hints = True,
        tests = (
            Arg(('', ), 0, new_cons=True),

            # goal
            Arg(('CLA_PZ_GAA2.23_SV0.910_Pr5-', ), 0, new_cons=True),
            Arg(('MGO_PZ_G0-_A14_DC43_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PZ_G0-_A14_DC0-_H70_Pr12', ), 0, new_cons=True),

            # forward
            Arg(('MGO_PX_G0-_A14_DC0-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC2-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC5-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC9-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC10_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC11_H70_Pr12', ), 1, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC15_H70_Pr12', ), 1, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC20_H70_Pr12', ), 1, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC21_H70_Pr12', ), 1, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC22_H70_Pr12', ), 2, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC23_H70_Pr12', ), 2, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC27_H70_Pr12', ), 2, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC32_H70_Pr12', ), 2, new_cons=True),
            Arg(('MGO_PX_G0-_A14_DC33_H70_Pr12', ), 3, new_cons=True),

            # defense
            Arg(('MGO_PY_G0-_A14_DC0-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC2-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC5-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC6-_H70_Pr12', ), 1, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC7-_H70_Pr12', ), 1, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC10_H70_Pr12', ), 1, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC11_H70_Pr12', ), 1, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC12_H70_Pr12', ), 2, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC15_H70_Pr12', ), 2, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC17_H70_Pr12', ), 2, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC18_H70_Pr12', ), 3, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC19_H70_Pr12', ), 3, new_cons=True),
            Arg(('MGO_PY_G0-_A14_DC20_H70_Pr12', ), 3, new_cons=True),

        )
    ),

    FuncInfo(
        name = 'compute_goal_points',
        annotation = (str, int),
        new_cons = new_cons,
        helpers = ('get_position', ),
        constants = ('GOALIE', 'POINTS_PER_GOAL'),
        show_hints = True,
        tests = (
            Arg(('', ), 0, new_cons=True),

            # goal
            Arg(('CLA_PZ_GAA2.23_SV0.910_Pr5-', ), 0, new_cons=True),
            Arg(('MGO_PZ_G0-_A14_DC43_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PZ_G10_A14_DC0-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PZ_G15_A14_DC0-_H70_Pr12', ), 0, new_cons=True),

            # forward
            Arg(('MGO_PX_G0-_A14_DC0-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G1-_A14_DC2-_H70_Pr12', ), 5, new_cons=True),
            Arg(('MGO_PX_G2-_A14_DC2-_H70_Pr12', ), 10, new_cons=True),
            Arg(('MGO_PX_G3-_A14_DC5-_H70_Pr12', ), 15, new_cons=True),
            Arg(('MGO_PX_G4-_A14_DC5-_H70_Pr12', ), 20, new_cons=True),
            Arg(('MGO_PX_G10_A14_DC5-_H70_Pr12', ), 50, new_cons=True),
            Arg(('MGO_PX_G12_A14_DC5-_H70_Pr12', ), 60, new_cons=True),
            # defense
            Arg(('MGO_PY_G0-_A14_DC0-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PY_G1-_A14_DC2-_H70_Pr12', ), 5, new_cons=True),
            Arg(('MGO_PY_G2-_A14_DC2-_H70_Pr12', ), 10, new_cons=True),
            Arg(('MGO_PY_G3-_A14_DC5-_H70_Pr12', ), 15, new_cons=True),
            Arg(('MGO_PY_G4-_A14_DC5-_H70_Pr12', ), 20, new_cons=True),
            Arg(('MGO_PY_G10_A14_DC5-_H70_Pr12', ), 50, new_cons=True),
            Arg(('MGO_PY_G12_A14_DC5-_H70_Pr12', ), 60, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'compute_assist_points',
        annotation = (str, int),
        new_cons = new_cons,
        helpers = ('get_position', ),
        constants = ('GOALIE', 'POINTS_PER_ASSIST'),
        show_hints = True,
        tests = (
            Arg(('', ), 0, new_cons=True),

            # goal
            Arg(('CLA_PZ_GAA2.23_SV0.910_Pr5-', ), 0, new_cons=True),
            Arg(('MGO_PZ_G0-_A0-_DC43_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PZ_G10_A10_DC0-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PZ_G15_A15_DC0-_H70_Pr12', ), 0, new_cons=True),

            # forward
            Arg(('MGO_PX_G22_A0-_DC0-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G22_A1-_DC2-_H70_Pr12', ), 3, new_cons=True),
            Arg(('MGO_PX_G22_A2-_DC2-_H70_Pr12', ), 6, new_cons=True),
            Arg(('MGO_PX_G22_A3-_DC5-_H70_Pr12', ), 9, new_cons=True),
            Arg(('MGO_PX_G22_A4-_DC5-_H70_Pr12', ), 12, new_cons=True),
            Arg(('MGO_PX_G22_A10_DC5-_H70_Pr12', ), 30, new_cons=True),
            Arg(('MGO_PX_G22_A12_DC5-_H70_Pr12', ), 36, new_cons=True),
            # defense
            Arg(('MGO_PY_G22_A0-_DC0-_H70_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PY_G22_A1-_DC2-_H70_Pr12', ), 3, new_cons=True),
            Arg(('MGO_PY_G22_A2-_DC2-_H70_Pr12', ), 6, new_cons=True),
            Arg(('MGO_PY_G22_A3-_DC5-_H70_Pr12', ), 9, new_cons=True),
            Arg(('MGO_PY_G22_A4-_DC5-_H70_Pr12', ), 12, new_cons=True),
            Arg(('MGO_PY_G22_A10_DC5-_H70_Pr12', ), 30, new_cons=True),
            Arg(('MGO_PY_G22_A12_DC5-_H70_Pr12', ), 36, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'compute_hit_points',
        annotation = (str, float),
        new_cons = new_cons,
        helpers = ('get_position', ),
        constants = ('GOALIE', 'POINTS_PER_HIT'),
        show_hints = True,
        tests = (
            Arg(('', ), 0, new_cons=True),

            # goal
            Arg(('CLA_PZ_GAA2.23_SV0.910_Pr5-', ), 0, new_cons=True),
            Arg(('MGO_PZ_G22_A14_DC43_H0-_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PZ_G22_A14_DC43_H10_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PZ_G22_A14_DC43_H15_Pr12', ), 0, new_cons=True),

            # forward
            Arg(('MGO_PX_G22_A14_DC0-_H0-_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC2-_H1-_Pr12', ), 0.2, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC2-_H2-_Pr12', ), 0.4, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC5-_H3-_Pr12', ), 0.6, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC5-_H7-_Pr12', ), 1.4, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC5-_H10_Pr12', ), 2.0, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC5-_H11_Pr12', ), 2.2, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC5-_H15_Pr12', ), 3.0, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC5-_H20_Pr12', ), 4.0, new_cons=True),
            Arg(('MGO_PX_G22_A14_DC5-_H33_Pr12', ), 6.6, new_cons=True),

            # defense
            Arg(('MGO_PY_G22_A14_DC0-_H0-_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC2-_H1-_Pr12', ), 0.2, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC2-_H2-_Pr12', ), 0.4, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC5-_H3-_Pr12', ), 0.6, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC5-_H7-_Pr12', ), 1.4, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC5-_H10_Pr12', ), 2.0, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC5-_H11_Pr12', ), 2.2, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC5-_H15_Pr12', ), 3.0, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC5-_H20_Pr12', ), 4.0, new_cons=True),
            Arg(('MGO_PY_G22_A14_DC5-_H33_Pr12', ), 6.6, new_cons=True),
        )
    ),

    FuncInfo(
        name = 'compute_fantasy_score',
        annotation = (str, float),
        new_cons = new_cons,
        helpers = ('get_position', 'compute_goal_points', 'compute_assist_points',
                   'compute_dc_points', 'compute_hit_points'),
        constants = ('GOALIE', 'SV_VALUE', 'GAA_VALUE'),
        show_hints = True,
        tests = (
            Arg(('', ), 0, new_cons=True),

            # goal
            Arg(('CLA_PZ_GAA0.00_SV0.000_Pr5-', ), 0.0, new_cons=True),
            Arg(('CLA_PZ_GAA0.00_SV0.910_Pr5-', ), 182.0, new_cons=True),
            Arg(('CLA_PZ_GAA2.23_SV0.000_Pr5-', ), -44.6, new_cons=True),
            Arg(('CLA_PZ_GAA2.23_SV0.910_Pr5-', ), 137.4, new_cons=True),


            # forward
            Arg(('MGO_PX_G0-_A0-_DC0-_H0-_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PX_G2-_A3-_DC4-_H5-_Pr12', ), 20.0, new_cons=True),
            Arg(('MGO_PX_G6-_A7-_DC8-_H9-_Pr12', ), 52.8, new_cons=True),
            Arg(('MGO_PX_G10_A2-_DC11_H3-_Pr12', ), 57.6, new_cons=True),
            Arg(('MGO_PX_G2-_A12_DC4-_H13_Pr12', ), 48.6, new_cons=True),
            Arg(('MGO_PX_G14_A15_DC16_H17_Pr12', ), 119.4, new_cons=True),
            Arg(('MGO_PX_G18_A20_DC22_H25_Pr12', ), 157.0, new_cons=True),

            # defense
            Arg(('MGO_PY_G0-_A0-_DC0-_H0-_Pr12', ), 0, new_cons=True),
            Arg(('MGO_PY_G2-_A3-_DC4-_H5-_Pr12', ), 20.0, new_cons=True),
            Arg(('MGO_PY_G6-_A7-_DC8-_H9-_Pr12', ), 53.8, new_cons=True),
            Arg(('MGO_PY_G10_A2-_DC11_H3-_Pr12', ), 57.6, new_cons=True),
            Arg(('MGO_PY_G2-_A12_DC4-_H13_Pr12', ), 48.6, new_cons=True),
            Arg(('MGO_PY_G14_A15_DC16_H17_Pr12', ), 120.4, new_cons=True),
            Arg(('MGO_PY_G18_A20_DC22_H25_Pr12', ), 158.0, new_cons=True),
        )
    ),
)


logo = '''
╭━━━╮╱╱╱╱╱╱╱╱╱╱╭┳╮╱╭╮╱╱╭━━━╮╱╭╮
┃╭━╮┃╱╱╱╱╱╱╱╱╱╱┃┃┃╱┃┃╱╱┃╭━━╯╱┃┃
┃╰━━┳━━┳━━┳━━┳━╯┃┃╱┃┣━━┫╰━━┳━╯┣╮╭╮
╰━━╮┃╭╮┃┃━┫┃━┫╭╮┃┃╱┃┃╭╮┃╭━━┫╭╮┃┃┃┃
┃╰━╯┃╰╯┃┃━┫┃━┫╰╯┃╰━╯┃╰╯┃╰━━┫╰╯┃╰╯┃
╰━━━┫╭━┻━━┻━━┻━━┻━━━┫╭━┻━━━┻━━┻━━╯
╱╱╱╱┃┃╱╱╱╱╱╱╱╱╱╱╱╱╱╱┃┃
╱╱╱╱╰╯╱╱╱╱╱╱╱╱╱╱╱╱╱╱╰╯'''
anya = '''
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠉⣀⠉⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⢀⣠⣀⠈⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⢀⣾⣿⣿⠀⠸⠟⠛⠋⠉⠉⠉⠉⢉⡉⠉⠉⠉⠛⠃⠀⣿⣿⣿⠇⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠘⣿⣿⣿⣤⣤⣤⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⣤⣿⣿⡇⠠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⠃⢻⣿⣿⣿⣿⣿⣿⡿⠋⠁⣀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣀⠉⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣟⠉⢹⣾⣌⠛⠟⣿⣿⡿⠋⢀⣴⣾⣿⣿⣿⣿⣿⡿⠿⠛⠛⢻⣿⣿⣿⣿⣿⣿⡟⠋⠛⠛⢿⣿⣿⣿⣿⣿⣷⣄⠀⠹⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿
⣿⣷⡄⠛⢁⣴⣾⣿⡟⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣧⣀⣿⣿⣿⡟⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠉⡉⠙⢻⣿⣿⣿⣿⣿⣿⡿⠟⠉⡉⠙⢿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠘⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⠁⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠈⠉⠀⠀⣹⣿⣿⣿⣿⣿⡇⠀⠺⠍⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⢿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⡏⠀⢸⣿⣿⣿⣿⣿⡿⠛⠛⠛⠢⠀⠀⠐⢀⣴⣿⣿⣿⣿⣿⣿⣷⡀⠐⠀⠀⣀⡿⢛⠻⢿⣿⣿⣿⣿⣿⠀⢸⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⡇⠀⢼⣿⣿⣿⣿⣿⠀⠀⠐⠀⠄⠀⣿⣿⣿⣿⡟⠹⠏⠈⢿⠉⢿⣿⣿⣿⠋⠠⠁⠀⠀⢀⣿⣿⣿⣿⣿⠀⢸⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣧⠀⢸⣿⣿⣿⣿⡿⠦⣄⣀⣘⣠⣶⣿⣿⣿⣿⣷⣤⠀⡄⠀⣤⣾⣿⣿⣿⣦⣁⣐⣀⣀⣾⣿⣿⣿⣿⡟⠀⣾⣿⣿⣿⣿⣿⣿⡿
⣿⣿⣿⣿⣿⣿⣿⡆⠈⢿⣿⡟⠁⣠⣤⡀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⠤⠤⠴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⢠⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⠿⣿⣄⠈⠻⡄⠐⣿⣿⣷⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⡏⠀⡄⠙⣤⠄⠀⢀⣉⡉⠁⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠛⠛⠛⠋⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⡟⠉⣿⣿⣷⡀⢣⣀⣼⠀⣴⣿⣿⣿⠉⡀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠘⠿⣦⠀⢻⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿
⠛⣁⣦⡘⠻⣿⣿⣿⣿⣿⡀⠙⢿⣿⣿⡄⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡖⠈⢀⣼⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣿
⣦⡘⠋⣠⣾⣿⣿⣿⣿⣿⣿⣦⣄⣀⠀⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⢓⣾⣿⣿⣿⣿⣿⣿⣿⣛⣿⣿⠟⣻⣿
⣿⣧⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⣸⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠉⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣄⡈⠙⠛⠿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠟⠛⠋⢀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣤⣤⡀⠘⣿⠀⣿⠇⢠⣤⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡧⠀⠉⠀⠙⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿
'''
# anya='''
# ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣡⣶⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣷⣬⡻⣿⣿⣿⣦⣮⡙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
# ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢋⣴⣿⣿⣿⡿⢋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣷⣆⡙⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿
# ⣿⣿⠿⠟⠛⠋⠉⠉⠁⠠⣠⣿⣿⣟⣼⡟⣱⣿⣿⣿⠏⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⢿⣿⣿⣿⣿⣮⠠⡀⠈⠉⠉⠉⠛⠛⠿⣿
# ⣿⣇⠀⠀⠀⠀⠀⢀⡄⣴⣿⣿⣿⣾⢏⣼⣿⣿⣿⡏⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡉⢿⣿⣿⣿⣷⡅⣤⠀⠀⠀⠀⠀⠀⣼
# ⣿⣿⡀⠀⠀⠀⢀⡌⣼⡿⢿⣿⣿⢃⣾⣟⣿⣿⡿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡈⢿⣿⣮⣻⣿⣌⢤⡀⠀⠀⠀⢠⣿
# ⣿⣿⡇⠀⠀⠀⠛⢸⣼⣿⣿⣿⡏⣼⣿⡞⢱⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡎⢻⣿⣿⣿⣿⡎⡇⠀⠀⠀⣼⣿
# ⣿⣿⣿⠀⠀⡔⢠⣇⣿⣿⣿⣿⢰⣿⣿⢱⣿⣿⠇⢿⣿⣿⣿⣿⣿⣿⠻⡐⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡘⣿⣷⡙⣿⣿⡔⢆⠀⢠⣿⣿
# ⣿⣿⣿⡇⠀⠀⣾⠰⣿⣿⣿⡇⣾⣿⢇⣿⣿⠃⣠⢸⣿⣿⣿⣿⣿⣿⣧⠃⢹⣿⣿⣷⠘⣿⣿⣿⣿⣿⣧⢹⣿⣿⡘⣿⣿⡄⠀⣼⣿⣿
# ⣿⣿⣿⣿⠀⣸⣿⣑⣿⣿⣿⢰⣿⣿⢸⣿⢏⣘⣛⣃⢿⡏⣿⣿⣿⣿⣿⣇⠀⠙⣿⣿⣧⠘⢿⣿⣿⣿⣿⣆⢿⣿⣇⢻⣿⣷⡀⠻⣿⣿
# ⣿⣿⣿⡟⢠⢻⣿⢌⣿⣿⡏⣸⣿⠃⣾⢏⡾⠿⠿⣿⣆⢻⡜⣿⣿⣿⣿⣿⣦⠳⣤⣙⢿⣎⢦⡙⢿⣿⡜⣿⡜⣿⣿⡸⣿⣷⡰⠰⣤⡩
# ⣿⣿⡟⡌⣼⢸⣿⡮⣿⣿⡇⣿⢣⡶⠙⠐⢊⣉⡙⠳⣯⣣⡻⣌⠻⢿⣿⣿⣿⣷⡍⠷⠒⠊⠀⠮⣌⠻⣷⢸⣧⢹⣿⡇⣿⣿⡇⣧⢹⣿
# ⣿⠟⣼⢡⣿⡎⣿⡇⣿⣿⡇⢣⡟⠀⣠⡾⣯⡀⠈⠳⡌⢿⣿⣮⣇⣐⣶⣮⣭⡝⢠⣾⣧⠀⠉⢲⣄⠓⢈⠘⣿⡌⣿⣗⢻⣿⡷⣹⡆⢿
# ⢣⣾⠃⣸⣿⣷⢹⣷⢹⣿⡇⣯⠁⣼⣿⠀⢩⠉⢂⠀⣿⠘⣿⣿⣿⣿⣿⣿⣿⠁⣿⠈⠉⠈⠆⠀⣿⡆⢁⡁⡿⠁⢿⣿⢸⣿⡇⣿⣿⡜
# ⠟⢁⡃⢾⣿⣿⣆⢻⡎⣿⡇⣯⠄⣿⣿⠀⠰⠀⠘⡀⣽⣿⣿⣿⣿⣿⣿⣿⣿⣷⣧⠀⡀⠀⡀⠄⣿⣿⢈⣡⣶⠐⢸⡿⢸⣿⠇⣿⣿⣧
# ⠀⢢⠁⣿⣿⣿⣿⡌⣷⡸⣇⢿⣆⢻⣿⣧⡸⠯⢗⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠫⠽⢇⣼⣿⡇⣬⣽⡏⡀⢸⡏⣿⡿⢸⣿⣿⣿
# ⠈⠤⠃⣿⣿⣿⣿⣿⣜⢷⡹⡸⣿⣷⣝⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⢻⣴⣾⡿⢈⡔⠨⢇⣿⢃⣿⣿⣿⣿
# ⡈⠢⠁⢻⣿⣿⣿⣿⣿⣮⠳⡁⢿⣿⣿⣿⣿⣿⣿⠟⢩⣭⣭⣭⣭⣭⣭⣭⣭⣙⣛⠻⣿⣿⣾⣾⣿⣿⣿⢣⣤⠔⠈⣼⢃⣾⣿⣿⣿⣿
# ⣇⠀⠇⠸⣿⣿⣿⣿⣿⣿⣿⡜⠸⣿⣿⣿⣿⣿⡇⠀⢀⣠⣤⣤⣤⣤⣤⣤⣤⣤⣀⠀⢸⣿⣿⣿⣿⣿⡇⠘⡀⡀⢠⢇⣼⣿⣿⣿⣿⡿
# ⠘⣧⡀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣆⠹⣿⣿⣿⣿⣷⡘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢇⣾⣿⣿⣿⣿⡟⢀⠃⢆⠁⢠⣾⣿⣿⣿⣿⣿⡇
# ⣷⣾⣷⣄⢂⢻⣿⣿⣿⣿⣿⣿⣿⣧⡙⣿⣿⣿⣿⣿⣬⡙⢿⣿⣿⣿⣿⣿⡿⢟⣡⣾⣿⣿⣿⡿⠋⠠⢌⡘⠄⢂⣿⣿⣿⣿⣿⣿⡿⢐
# ⠀⠉⠛⠻⠆⢂⠹⣿⣿⣿⣿⣿⣿⣿⣷⣌⠻⢿⣿⣿⣿⣿⣷⣬⣭⣭⣭⣥⣶⣿⣿⣿⡿⠟⠋⡐⢌⠡⠀⠈⠆⢸⣿⣿⣿⣿⣿⡿⠁⡌
# ⠀⠀⠀⠀⠀⠀⠐⣈⠻⣿⣿⣿⣿⣿⣿⣿⣆⠀⠈⠭⠙⡛⠛⠟⠿⠻⠟⠛⠛⠋⠉⡄⢂⠄⠑⠨⠄⡃⠄⢠⡁⢸⣿⣿⣿⣿⡿⢁⠒⠀
# ⠀⠀⠀⠀⠀⠀⠀⠀⠂⠌⡙⠿⣿⣿⣿⣿⣿⣆⢰⣾⣶⣬⣙⠶⢶⣤⠦⠖⣊⡥⣖⣌⠂⠂⠃⠀⠁⠈⠈⠀⠀⣹⣿⣿⣿⠟⠁⠄⠁⠀
# '''


if __name__ == '__main__':

    print(logo)
    print('速成教育 Assignment 1 Checker\n')

    phone_number, hostname, n = process_temp_file()
    check_permission(phone_number, hostname, n)


    try:
        imp_file = importlib.import_module(IMPORT_FILE_NAME)
    except Exception as e:
        if ('No module named' in str(e)):
            print(f'找不到你的 {IMPORT_FILE_NAME}.py')
            print(f'你確定有把 shit_checker 和 它 放在同一個資料夾裡嗎?')
            print(f'shit_checker 目前在: {os.getcwd()}')
        else:
            print('你的文件有 Syntax Error, 請先fix好')
            print('看看哪里有红线 :)')
            print('原文: ' + str(e))
        exit()

    func_dict = {name: func for name, func in inspect.getmembers(imp_file, predicate=inspect.isfunction)}
    cons_dict = {name: getattr(imp_file, name) for name in dir(imp_file) if name.isupper()}

    # print(cons_dict)

    for funcInfo in ALL_FUNCTIONS:
        funcInfo.ori_cons = cons_dict
        if funcInfo.name in func_dict:
            funcInfo.func = func_dict[funcInfo.name]
        else:
            # 學生 還沒寫
            funcInfo.func = None

    # 找出哪些是 學生自己寫的 helpers
    helpers_names = set(func_dict.keys()) - {funcInfo.name for funcInfo in ALL_FUNCTIONS}
    all_helpers = []
    for name in helpers_names:
        all_helpers.append(FuncInfo(name=name, func=func_dict[name], helper=True))


    # for func_name, data in ALL_FUNCTIONS.items():
    for funcInfo in ALL_FUNCTIONS:
        func_name = funcInfo.name

        # if func_name == 'is_valid_cell':
        #     print('🐥🐥🐥')
        #     print('因为 is_sink() 要用到以下这些 helper function')
        #     print('所以先检查:')
        #     print(' - is_valid_cell()')
        #     print(' - is_cell_lower()')
        #     print(' - get_adjacent_cells()')

        print(f'开始测试: {func_name}')
        print('-' * 40)

        if funcInfo.func == None:

            FuncInfo().perror(f'找不到 {func_name}...')

        # 看是否有用 自定義的 helper
        code = funcInfo.get_code()
        helpers: list[FuncInfo] = []
        for helper in all_helpers:
            if str(helper) in code:
                helpers.append(helper)
                code += ' ' + helper.get_code()

        if len(helpers) > 0:
            print('侦测到 你有用以下的helper functions:')
            for helper in helpers:
                print(' - ' + str(helper))
            print()

            for helper in helpers:
                if helper.name == 'deepcopy': continue
                print('-' * 30)
                print(f'开始测试: {helper}')
                if helper.helper_checked:
                    print(f'{helper} 刚刚已检查过 ✅')
                    print('-' * 30)
                    print()
                    continue
                if funcInfo.need_to_check_docstring:
                    helper.check_description()
                    helper.check_doc_other_detail()
                    helper.check_doc_example()
                helper.check_param_usage()
                helper.check_code_other_detail()
                helper.helper_checked = True
                print('-' * 30)
                print('VC老师: 我检查不了你的type contract, 请自己确保要写好～')
                print()
            print(f'继续测试: {func_name}')


        funcInfo.check_annotation()
        if funcInfo.need_to_check_docstring:
            funcInfo.check_description()
            funcInfo.check_doc_other_detail()
            funcInfo.check_doc_example()

        funcInfo.check_param_usage()
        funcInfo.check_constant_usage(code)
        funcInfo.check_helper_usage()
        funcInfo.check_code_other_detail()



        if funcInfo.message:
            print()
            print('🐥🐥🐥')
            print(funcInfo.message)
            print('🐥🐥🐥')
            print()

        print('🐛' * 3)
        print('开始跑 Tests')
        funcInfo.run_tests()
        print('恭喜你代码通过了所有的Test 没问题了')

        print()

    # print('最后, 检查 example 是否正确, 开始跑 doctest')
    # for funcInfo in ALL_FUNCTIONS:
    #     funcInfo.run_doc_test()
    # print('已完成 ✅')

    points = sum(f.points for f in ALL_FUNCTIONS)
    total_points = sum(f.get_total_points() for f in ALL_FUNCTIONS)

    # print(points)
    process_temp_file(check_modification=True)
    # if points == 2831:
    print(anya)
    print(f'大侠完成了: {points * 3} / {points * 3}')
    print("恭喜你通過了 所有的test, 記得跑 學校的 a3_checker.py 這樣就能拿 95%+")
    print()
    print('🐥🐥🐥 記得跑 a3_checker 啊!! 🐥🐥🐥')

    # import webbrowser
    # webbrowser.open_new('https://www.youtube.com/watch?v=dQw4w9WgXcQ')


    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    discord_msg = f'```\n{now}\n學生號碼: {phone_number}\n寫完拉!\n```'
    client = MyBot(discord_msg)
    client.run(bot_token)

    # test_func = func_dict['func1']
    # print(inspect.getsourcelines(test_func))
    # print(test_func.__code__.co_varnames)
    # print(inspect.getsource(test_func))
    # print(test_func.__code__.co_code)
