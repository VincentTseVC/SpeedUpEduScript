from __future__ import annotations
import inspect
import importlib
import importlib.util
import traceback
import doctest
import re
from dataclasses import dataclass
from copy import deepcopy
from typing import Callable, Any, TextIO
import os
from io import StringIO


IMPORT_FILE_NAME = 'slide_functions'

###############################################
SUFFIX='''
💩💩💩💩💩💩💩💩💩💩
遇到了不可以继续的错误, Checker 不继续往下检查了
大侠完成了: {} / {}

VC老师:
如果你读完Error Message仍然不知道如何fix 这个错误,
请问我的时候, 附上代码的截图和Error Message 的截图

💩💩💩💩💩💩💩💩💩💩
'''

MISSING_DOC_MSG = ''' ❌

请拯救在中风边缘的VC老师😵
你的 Docstring 呢？
'''

WRONG_DOC_START_MSG = ''' ❌

第一节课讲过了🔪
Description 的第一个字请用动词 比如:
(Return, Modify, Update, ...etc)

这一题必须用: {}
'''

MISSING_PARAM_MSG = ''' ❌

我真的对你很失望🥺🥺🥺, 讲过几次了!!
Docstring 要提到每个parameter的名字
你的 '{}' 呢?
'''

MISSING_PARAM_TYPE_MSG = ''' ❌

Parameter 的 type 呢 🥲
告诉我, 你只是忘了写 '{}' 的 type
'''

WRONG_PARAM_TYPE_MSG = ''' ❌

VC老师有认识不错的眼镜店👓👓👓
题目都告诉你了..
第 {} 个 parameter 应该是 {}
'''

MISSING_RETURN_TYPE_MSG = ''' ❌

Return type 呢 🥲
告诉我, 你只是忘了写
'''

WRONG_RETURN_TYPE_MSG = ''' ❌

VC老师有认识不错的眼镜店👓👓👓
题目都告诉你了..
这个function 应该 return {}
'''

DOUBLE_QUOTE_MSG = ''' ❌

🙄🙄🙄虽然这很SB, 但在这门课里
尽量用单引号 ' 吧 别用双引号 "了
'''

MISSING_DOC_EXAMPLE_MSG = ''' ❌

偷懒被抓到啰～ 😬😬😬
请把Example 写好
至少要写「{}个」可以展示不同情况的例子

记得 '>>> ' 后面要有一个空格
'''

MISSING_CONSTANT1 = '''
💢💢💢💢💢💢💢💢💢💢
你的Constant呢?
是不是皮在痒? 想被扣分?

为什么没有用: {}

💢💢💢💢💢💢💢💢💢💢
'''

MISSING_CONSTANT2 = '''
💢💢💢💢💢💢💢💢💢💢
你的Constant呢?
是不是皮在痒? 想被扣分?

以下{}個 至少要用{}個: 
{}

💢💢💢💢💢💢💢💢💢💢
'''

MISSING_HELPER = '''
💢💢💢💢💢💢💢💢💢💢
你的helper function呢?
不要重复代码

看看哪里可以利用: {}

💢💢💢💢💢💢💢💢💢💢
'''

PARAM_NOT_USED = '''
🐷🐷🐷🐷🐷🐷🐷🐷🐷🐷
你不觉得哪里怪怪的吗？
你居然沒用到全部的 parameter

比如: {}

🐷🐷🐷🐷🐷🐷🐷🐷🐷🐷
'''

WRONG_OUTPUT='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码写错啦 ❌

测试:
>>> {}{}

应该返回的结果: {}
您老函数的结果: {}

{}
💀💀💀💀💀💀💀💀💀💀
'''

PARAM_MODIFY='''
😰😰😰😰😰😰😰😰😰😰
❌ 你别乱改参数啊 ❌

测试:
>>> {}{}

参数在运行完函数后应该为:
{}

实际被改为:
{}

VC:
{}
😰😰😰😰😰😰😰😰😰😰
'''

ERROR_MSG='''
❗️❗️❗️❗️❗️❗️❗️❗️❗️❗️
你的代码Crash了

测试:
>>> {}{}

原因: {}

具体细节:
{}

❗️❗️❗️❗️❗️❗️❗️❗️❗️❗️
'''
DOCTEST_MSG='''
🐈🐈🐈🐈🐈🐈🐈🐈🐈🐈
雖然說你代碼寫對了, 但你的Example 寫錯了

檢查一下你的 expected output 吧

🐈🐈🐈🐈🐈🐈🐈🐈🐈🐈
'''

NOT_SAVE='''
🤨🤨🤨🤨🤨🤨🤨🤨🤨🤨
警告警告!
你的文件跟上一次你运行我的checker相比没有任何改变
是的, 我就是知道 你确定你保存了文件才切换过来运行的吗?
如果没有保存文件, 你会看到文件名字右边有个小星星 *
你确定你修改的文件是跟这个checker 在同一个文件夹的吗?
当前文件位置: {}
🤨🤨🤨🤨🤨🤨🤨🤨🤨🤨
'''

OTHER_DETAILED='''
💀💀💀💀💀💀💀💀💀💀
❌ 你的代码太难看了啦 ❌

{}

💀💀💀💀💀💀💀💀💀💀
'''

TIPS='''
🦃🦃🦃🦃🦃🦃🦃🦃🦃🦃
注意: 我 test case 里用的 所有 hypertensions 的顺序为:

[ht_65_up, ht_45_64, ht_20_44, nbh_65_up, nhb_45_64, nbh_20_44]

🦃🦃🦃🦃🦃🦃🦃🦃🦃🦃
'''

###############################################

def perror(msg: str):
    print(msg)
    # print(TIPS)
    points = sum(f.points for f in ALL_FUNCTIONS)
    total_points = sum(f.get_total_points() for f in ALL_FUNCTIONS)
    print(SUFFIX.format(points * 3, total_points * 3))
    check_file_modified()
    exit()

class Arg:

    before: tuple
    current: tuple
    after: tuple
    result: Any

    def __init__(self, before, result, after=None) -> None:
        self.before = before
        self.current = deepcopy(before)
        self.result = result
        if after is not None:
            self.after = after
        else:
            self.after = deepcopy(before)

@dataclass
class FuncInfo:
    name: str
    annotation: tuple = ()
    constants: tuple = ()
    helpers: tuple = ()
    tests: tuple[Arg] = ()

    num_examples: int = 2
    helper: bool = False
    helper_checked: bool = False
    modify: bool = False
    close_file: bool = False

    sort: bool = False
    no_if: bool = False

    run_before: Callable = None
    run_after: Callable = None

    func: Callable = None
    points: int = 0

    message: str = ""
    extra_msg: str = ""

    def __str__(self): return self.name

    def check_annotation(self):
        print('检查: type contract', end='')
        sig = inspect.signature(self.func)
        ps = list(sig.parameters)
        pt = [p.annotation for p in sig.parameters.values()]
        rt = sig.return_annotation

        for i in range(len(self.annotation) - 1):
            if pt[i] == inspect._empty:
                perror(MISSING_PARAM_TYPE_MSG.format(ps[i]))
            self.points += 1


            if isinstance(self.annotation[i], tuple):
                crt, s = self.annotation[i]
            else:
                crt = self.annotation[i]
                s = crt.__name__

            if pt[i] != crt:
                perror(WRONG_PARAM_TYPE_MSG.format(i+1, s))
            self.points += 1

        if rt == inspect._empty:
            perror(MISSING_RETURN_TYPE_MSG)
        self.points += 1

        if rt != self.annotation[-1]:
            perror(WRONG_RETURN_TYPE_MSG.format(str(self.annotation[-1])[8:-2]))
        self.points += 1
        print(' ✅')

    def check_description(self):
        print('检查: desciption', end='')

        start1 = 'Return'
        start2 = ('Modify', 'Update', 'Remove')

        doc = inspect.getdoc(self.func)
        if not doc:
            perror(MISSING_DOC_MSG)
        self.points += 1

        clean = ''
        for ch in doc:
            if ch.isalnum() or ch in ' _\n':
                clean += ch
        words = re.split(r' |\n', clean)

        if not self.helper:
            start = words[0]
            if self.modify:
                if start not in start2:
                    perror(WRONG_DOC_START_MSG.format(str(start2)[1:-1]))
            else:
                if start != start1:
                    perror(WRONG_DOC_START_MSG.format(start1))
        self.points += 1

        sig = inspect.signature(self.func)
        for param in list(sig.parameters):
            if param not in words:
                perror(MISSING_PARAM_MSG.format(param))
            self.points += 1
        print(' ✅')

    # 其他細節
    def check_doc_other_detail(self):
        print('检查: docstring 其他細節', end='')
        if '"' in inspect.getdoc(self.func):
            perror(DOUBLE_QUOTE_MSG)
        self.points += 10
        print(' ✅')

    def check_doc_example(self):
        print('检查: example', end='')
        doc = inspect.getdoc(self.func)
        lines = doc.split('\n')
        count = 0
        for line in lines:
            if '>>> ' in line and self.func.__name__ in line:
                count += 1
        if count < self.num_examples:
            perror(MISSING_DOC_EXAMPLE_MSG.format(self.num_examples))
        self.points += 5
        print(' ✅')

    def get_code(self) -> str:
        code = inspect.getsource(self.func)
        code = code[code.rfind('"""')+4:]
        code = code.split('\n')
        code = [l.lstrip() for l in code]
        code = [l for l in code if not l.startswith('#')]
        code = '\n'.join(code)
        return code

    # 是否每個 constants 都用了
    def check_constant_usage(self, code: str = ''):
        print('检查: constant 的使用', end='')
        if code == '':
            code = self.get_code()

        # if self.constants:
        for c in self.constants:
            if type(c) == tuple:
                count = 0
                for c2 in c[1:]:
                    if c2 in code:
                        count += 1

                if count < c[0]:
                    perror(MISSING_CONSTANT2.format(len(c)-1, c[0], c[1:]))
            else:    
                if c not in code:
                    perror(MISSING_CONSTANT1.format(c))
            self.points += 1
        print(' ✅')

    # 是否用了 這些 helper
    def check_helper_usage(self):
        print('检查: helper function 的使用', end='')
        code = self.get_code()

        for h in self.helpers:
            if h not in code:
                perror(MISSING_HELPER.format(h))
            self.points += 1
        print(' ✅')

    # 是否用了 每個 param
    def check_param_usage(self):
        print('检查: parameter 的使用', end='')
        code = self.get_code()
        params = list(inspect.signature(self.func).parameters)
        for param in params:
            if param not in code:
                perror(PARAM_NOT_USED.format(param))
            self.points += 1
        print(' ✅')

    # 跑所有的 Test
    def run_tests(self):

        if self.run_before is not None:
            print("RUNING BEFORE")
            self.run_before()

        for i, test in enumerate(self.tests, 1):
            print(f'{self.func.__name__} #{i}', end='')
            bfr, cur, aft, exp = test.before, test.current, test.after, test.result

            cur_msg = str(cur)
            if ",)" in cur_msg:
                cur_msg = ''.join(cur_msg.rsplit(',', 1))
            
            name = self.func.__name__

            try:
                act = self.func(*cur)
            except Exception as e:
                err = traceback.format_exc()
                perror(ERROR_MSG.format(name, cur_msg, str(e), err))

            act_msg = f"'{act}'" if type(act) == str else str(act)
            exp_msg = f"'{exp}'" if type(exp) == str else str(exp)

    

            if self.sort:
                act = sorted(act)
                exp = sorted(exp)
                self.extra_msg += '\n注意! 结果的顺序无所谓, 确保里面的item 都一样就行'

            if act != exp:
                print()
                perror(WRONG_OUTPUT.format(name, cur_msg, exp_msg, act_msg, self.extra_msg))
            self.points += 1

            if cur != aft:
                print()
                perror(PARAM_MODIFY.format(name, bfr, aft, cur_msg, self.extra_msg))
            self.points += 1

            if self.run_after is not None:
                self.run_after()

            print(f' ...ok')

    def run_doc_test(self):
        print(f'检查 doctest: {self.name}')
        name = f'{IMPORT_FILE_NAME}.{self.name}'
        path = IMPORT_FILE_NAME + '.py'
        spec = importlib.util.spec_from_file_location(name, path)
        foo = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(foo)
        res = doctest.testmod(foo)

        if res.failed != 0:
            perror(DOCTEST_MSG)
        self.points += 20


    def check_no_if(self):
        code = self.get_code()
        if 'if ' in code:
            perror(OTHER_DETAILED.format(
                '你是🐷吗, 说几次了 这种题 能不用if 就不要用'))

    def check_no_equals_true_false(self):
        code = self.get_code()
        if 'True:' in code or 'False:' in code:
            perror(OTHER_DETAILED.format(
                '请不要用 == True, == False, is True, is False'))


    def check_code_other_detail(self):
        print('检查: 代碼 其他細節', end='')
        self.check_no_equals_true_false()
        if self.no_if: self.check_no_if()
        self.points += 100
        print(' ✅')


    def get_total_points(self):
        # docstring points
        total_points = 0
        total_points += len(self.annotation) * 2    # annotation
        total_points += len(self.annotation) + 1    # description

        total_points += 10                          # other details
        total_points += 5                           # example

        total_points += len(self.constants)         # constant used
        total_points += len(self.helpers)           # helpers used
        total_points += len(self.annotation) - 1    # param used

        total_points += len(self.tests) * 2         # exp + modify

        total_points += 20                          # doctest
        total_points += 100                         # code detail
        return total_points


def check_file_modified():

    path = 'temp.txt'

    mtime = str(os.path.getmtime(IMPORT_FILE_NAME+'.py'))
    ltime = ''

    with open(path, 'a') as f:
        pass
    with open(path, 'r') as f:
        ltime = f.readline().strip()
    with open(path, 'w') as f:
        f.write(mtime)

    if mtime == ltime:
        print(NOT_SAVE.format(os.getcwd()))

# =================================================
ALL_FUNCTIONS = (
    FuncInfo(
        name = 'is_board_full',
        annotation = (str, bool),
        constants = ('BLACK_SQUARE',),
        tests = (
            Arg(("", ), True),
            Arg(("#", ), False),
            Arg(("##", ), False),
            Arg(("#1", ), False),
            Arg(("11", ), True),
        )
    ),

    FuncInfo(
        name = 'between',
        annotation = (str, int, int, bool),
        tests = (
            Arg(('0', 0, 0), True),
            Arg(('0', 0, 2), True),
            Arg(('2', 0, 2), True),
            Arg(('1', 0, 2), True),
            Arg(('10', 0, 0), False),
            Arg(('5', 0, 2), False),
            Arg(('0', 1, 2), False),
        )
    ),

    FuncInfo(
        name = 'calculate_str_index',
        annotation = (int, int, int),
        constants = ('N_COLUMNS',),
        tests = (
            Arg((1, 1), 0),
            Arg((1, 2), 1),
            Arg((1, 3), 2),
            Arg((1, 4), 3),
            Arg((1, 5), 4),

            Arg((2, 1), 5),
            Arg((2, 2), 6),
            Arg((2, 3), 7),
            Arg((2, 4), 8),
            Arg((2, 5), 9),

            Arg((3, 1), 10),
            Arg((3, 2), 11),
            Arg((3, 3), 12),
            Arg((3, 4), 13),
            Arg((3, 5), 14),

            Arg((4, 1), 15),
            Arg((4, 2), 16),
            Arg((4, 3), 17),
            Arg((4, 4), 18),
            Arg((4, 5), 19),
        )
    ),

    FuncInfo(
        name = 'calculate_increment',
        annotation = (str, int),
        constants = (
            (3, 'ACROSS', 'DOWN', 'DOWN_LEFT', 'DOWN_RIGHT'),
            'N_COLUMNS'),
        tests = (
            Arg(('across', ), 1),
            Arg(('down', ), 5),
            Arg(('dright', ), 6),
            Arg(('dleft', ), 4),
        )
    ),

    FuncInfo(
        name = 'get_row',
        annotation = (int, str, str),
        constants = ('ACROSS', 'N_COLUMNS'),
        helpers = ('calculate_str_index', 'calculate_increment'),
        tests = (
            Arg((1, 'ABCDEFGHIJKLMNOPQRST'), 'ABCDE'),
            Arg((2, 'ABCDEFGHIJKLMNOPQRST'), 'FGHIJ'),
            Arg((3, 'ABCDEFGHIJKLMNOPQRST'), 'KLMNO'),
            Arg((4, 'ABCDEFGHIJKLMNOPQRST'), 'PQRST'),
        )
    ),

    FuncInfo(
        name = 'get_column',
        annotation = (int, str, str),
        constants = ('DOWN', ),
        helpers = ('calculate_str_index', 'calculate_increment'),
        tests = (
            Arg((1, 'ABCDEFGHIJKLMNOPQRST'), 'AFKP'),
            Arg((2, 'ABCDEFGHIJKLMNOPQRST'), 'BGLQ'),
            Arg((3, 'ABCDEFGHIJKLMNOPQRST'), 'CHMR'),
            Arg((4, 'ABCDEFGHIJKLMNOPQRST'), 'DINS'),
            Arg((5, 'ABCDEFGHIJKLMNOPQRST'), 'EJOT'),
        )
    ),

    FuncInfo(
        name = 'slide_right',
        annotation = (str, int, str, str),
        constants = ('N_COLUMNS', ),
        helpers = ('calculate_str_index', ),
        tests = (
            Arg(('X', 1, 'ABCDE222223333344444'), 
                         'XABCD222223333344444'),

            Arg(('X', 2, '11111ABCDE3333344444'), 
                         '11111XABCD3333344444'),

            Arg(('X', 3, '1111122222ABCDE44444'), 
                         '1111122222XABCD44444'),

            Arg(('X', 4, '111112222233333ABCDE'), 
                         '111112222233333XABCD'),
        )
    ),

    FuncInfo(
        name = 'slide_left',
        annotation = (str, int, str, str),
        constants = ('N_COLUMNS', ),
        helpers = ('calculate_str_index', ),
        tests = (
            Arg(('X', 1, 'ABCDE222223333344444'), 
                         'BCDEX222223333344444'),

            Arg(('X', 2, '11111ABCDE3333344444'), 
                         '11111BCDEX3333344444'),

            Arg(('X', 3, '1111122222ABCDE44444'), 
                         '1111122222BCDEX44444'),

            Arg(('X', 4, '111112222233333ABCDE'), 
                         '111112222233333BCDEX'),
        )
    ),
)

logo = '''
╭━━━╮╱╱╱╱╱╱╱╱╱╱╭┳╮╱╭╮╱╱╭━━━╮╱╭╮
┃╭━╮┃╱╱╱╱╱╱╱╱╱╱┃┃┃╱┃┃╱╱┃╭━━╯╱┃┃
┃╰━━┳━━┳━━┳━━┳━╯┃┃╱┃┣━━┫╰━━┳━╯┣╮╭╮
╰━━╮┃╭╮┃┃━┫┃━┫╭╮┃┃╱┃┃╭╮┃╭━━┫╭╮┃┃┃┃
┃╰━╯┃╰╯┃┃━┫┃━┫╰╯┃╰━╯┃╰╯┃╰━━┫╰╯┃╰╯┃
╰━━━┫╭━┻━━┻━━┻━━┻━━━┫╭━┻━━━┻━━┻━━╯
╱╱╱╱┃┃╱╱╱╱╱╱╱╱╱╱╱╱╱╱┃┃
╱╱╱╱╰╯╱╱╱╱╱╱╱╱╱╱╱╱╱╱╰╯'''
anya='''
(_＼ヽ
　 ＼＼ .Λ＿Λ.
　　 ＼(　ˇωˇ)　
　　　 >　⌒ヽ
　　　/ 　 へ＼
　　 /　　/　＼＼
　　 ﾚ　ノ　　 ヽ_つ
　　/　/
　 /　/|
　(　(ヽ
　|　|、＼
　| 丿 ＼ ⌒)
　| |　　) /
`ノ ) 　 Lﾉ
(_／'''


if __name__ == '__main__':
    print(logo)
    print('速成教育 CSCA08 A3 Checker\n')

    try:
        imp_file = importlib.import_module(IMPORT_FILE_NAME)
    except Exception as e:
        if ('No module named' in str(e)):
            print(f'找不到你的 {IMPORT_FILE_NAME}.py')
            print(f'你確定有把 shit_checker 和 它 放在同一個資料夾裡嗎?')
            print(f'shit_checker 目前在: {os.getcwd()}')
        else:
            print('你的文件有 Syntax Error, 請先fix好')
            print('看看哪里有红线 :)')
            print('原文: ' + str(e))
        exit()

    func_dict = {name: func for name, func in inspect.getmembers(imp_file, predicate=inspect.isfunction)}

    for funcInfo in ALL_FUNCTIONS:
        if funcInfo.name in func_dict:
            funcInfo.func = func_dict[funcInfo.name]
        else:
            # 學生 還沒寫
            funcInfo.func = None

    # 找出哪些是 學生自己寫的 helpers
    helpers_names = set(func_dict.keys()) - {funcInfo.name for funcInfo in ALL_FUNCTIONS}
    all_helpers = []
    for name in helpers_names:
        all_helpers.append(FuncInfo(name=name, func=func_dict[name], helper=True))


    # for func_name, data in ALL_FUNCTIONS.items():
    for funcInfo in ALL_FUNCTIONS:
        func_name = funcInfo.name

        # if func_name == 'is_valid_cell':
        #     print('🐥🐥🐥')
        #     print('因为 is_sink() 要用到以下这些 helper function')
        #     print('所以先检查:')
        #     print(' - is_valid_cell()')
        #     print(' - is_cell_lower()')
        #     print(' - get_adjacent_cells()')

        print(f'开始测试: {func_name}')
        print('-' * 40)

        if funcInfo.func == None:
            perror(f'找不到 {func_name}...')

        # 看是否有用 自定義的 helper
        code = funcInfo.get_code()
        helpers: list[FuncInfo] = []
        for helper in all_helpers:
            if str(helper) in code:
                helpers.append(helper)
                code += ' ' + helper.get_code()

        if len(helpers) > 0:
            print('侦测到 你有用以下的helper functions:')
            for helper in helpers:
                print(' - ' + str(helper))
            print()

            for helper in helpers:
                print('-' * 30)
                print(f'开始测试: {helper}')
                if helper.helper_checked:
                    print(f'{helper} 刚刚已检查过 ✅')
                    print('-' * 30)
                    print()
                    continue
                helper.check_description()
                helper.check_doc_other_detail()
                helper.check_doc_example()
                helper.check_param_usage()
                helper.check_code_other_detail()
                helper.helper_checked = True
                print('-' * 30)
                print('VC老师: 我检查不了你的type contract, 请自己确保要写好～')
                print()
            print(f'继续测试: {func_name}')


        funcInfo.check_annotation()
        funcInfo.check_description()
        funcInfo.check_doc_other_detail()
        funcInfo.check_doc_example()
        funcInfo.check_helper_usage()
        funcInfo.check_param_usage()
        funcInfo.check_code_other_detail()

        funcInfo.check_constant_usage(code)


        if funcInfo.message:
            print()
            print('🐥🐥🐥')
            print(funcInfo.message)
            print('🐥🐥🐥')
            print()

        print('🐛' * 3)
        print('开始跑 Tests')
        funcInfo.run_tests()
        print('恭喜你代码通过了所有的Test 没问题了')

        print()

    print('最后, 检查 example 是否正确, 开始跑 doctest')
    # for funcInfo in ALL_FUNCTIONS:
        # funcInfo.run_doc_test()
    print('已完成 ✅')

    points = sum(f.points for f in ALL_FUNCTIONS)
    total_points = sum(f.get_total_points() for f in ALL_FUNCTIONS)

    # print(points)
    check_file_modified()
    if points == 1141:
        print(anya)
        print(f'大侠完成了: {points * 3} / {1141 * 3}')
        print("恭喜你通過了 所有的test, 記得跑 學校的 checker.py 這樣就能拿 95%+")
        print()
        print('🐥🐥🐥 記得跑 a3_checker 啊!! 🐥🐥🐥')
        import webbrowser
        webbrowser.open('https://youtu.be/MfmoIHY7Z-k')


    # test_func = func_dict['func1']
    # print(inspect.getsourcelines(test_func))
    # print(test_func.__code__.co_varnames)
    # print(inspect.getsource(test_func))
    # print(test_func.__code__.co_code)